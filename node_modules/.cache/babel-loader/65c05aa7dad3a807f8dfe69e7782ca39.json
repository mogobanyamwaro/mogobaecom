{"ast":null,"code":"import _slicedToArray from\"/home/douglas/Downloads/ProShop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import MetaData from'../layout/MetaData';import{useAlert}from'react-alert';import{useDispatch,useSelector}from'react-redux';import{resetPassword,clearErrors}from'../../actions/userActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewPassword=function NewPassword(_ref){var history=_ref.history,match=_ref.match;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var alert=useAlert();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.forgotPassword;}),error=_useSelector.error,success=_useSelector.success;useEffect(function(){if(error){alert.error(error);dispatch(clearErrors());}if(success){alert.success('Password updated successfully');history.push('/login');}},[dispatch,alert,error,success,history]);var submitHandler=function submitHandler(e){e.preventDefault();var formData=new FormData();formData.set('password',password);formData.set('confirmPassword',confirmPassword);dispatch(resetPassword(match.params.token,formData));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:'New Password Reset'}),/*#__PURE__*/_jsx(\"div\",{className:\"row wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-10 col-lg-5\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"shadow-lg\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-3\",children:\"New Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password_field\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password_field\",className:\"form-control\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirm_password_field\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirm_password_field\",className:\"form-control\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{id:\"new_password_button\",type:\"submit\",className:\"btn btn-block py-3\",children:\"Set Password\"})]})})})]});};export default NewPassword;","map":{"version":3,"sources":["/home/douglas/Downloads/ProShop/frontend/src/components/user/NewPassword.js"],"names":["React","Fragment","useState","useEffect","MetaData","useAlert","useDispatch","useSelector","resetPassword","clearErrors","NewPassword","history","match","password","setPassword","confirmPassword","setConfirmPassword","alert","dispatch","state","forgotPassword","error","success","push","submitHandler","e","preventDefault","formData","FormData","set","params","token","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetPassword, clearErrors } from '../../actions/userActions'\n\nconst NewPassword = ({ history, match }) => {\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated successfully')\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData))\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'New Password Reset'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"new_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\">\n                            Set Password\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n"]},"metadata":{},"sourceType":"module"}
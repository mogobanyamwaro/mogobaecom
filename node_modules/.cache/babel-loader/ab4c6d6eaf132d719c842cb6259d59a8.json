{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/updateuser/UpdateUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaData from '../../../layout/MetaData';\nimport Sidebar from '../../sidebar/Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser, getUserDetails, clearErrors } from '../../../../actions/userActions';\nimport { UPDATE_USER_RESET } from '../../../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateUser = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    isUpdated\n  } = useSelector(state => state.user);\n  const {\n    user\n  } = useSelector(state => state.userDetails);\n  const userId = match.params.id;\n  useEffect(() => {\n    console.log(user && user._id !== userId);\n\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      history.push('/admin/users');\n      dispatch({\n        type: UPDATE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated, userId, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('role', role);\n    dispatch(updateUser(user._id, formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `Update User`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-10 col-lg-5\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"shadow-lg\",\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"mt-2 mb-5\",\n                children: \"Update User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name_field\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"name\",\n                  id: \"name_field\",\n                  className: \"form-control\",\n                  name: \"name\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email_field\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"email_field\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"role_field\",\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"role_field\",\n                  className: \"form-control\",\n                  name: \"role\",\n                  value: role,\n                  onChange: e => setRole(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"user\",\n                    children: \"user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"admin\",\n                    children: \"admin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn update-btn btn-block mt-4 mb-3\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUser, \"4Za5evmUzfAY6Ihslm8oqDN3HFs=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/updateuser/UpdateUser.jsx"],"names":["React","Fragment","useState","useEffect","MetaData","Sidebar","useAlert","useDispatch","useSelector","updateUser","getUserDetails","clearErrors","UPDATE_USER_RESET","UpdateUser","history","match","name","setName","email","setEmail","role","setRole","alert","dispatch","error","isUpdated","state","user","userDetails","userId","params","id","console","log","_id","success","push","type","submitHandler","e","preventDefault","formData","FormData","set","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n\nimport MetaData from '../../../layout/MetaData';\nimport Sidebar from '../../sidebar/Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateUser,\n  getUserDetails,\n  clearErrors,\n} from '../../../../actions/userActions';\nimport { UPDATE_USER_RESET } from '../../../../constants/userConstants';\n\nconst UpdateUser = ({ history, match }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, isUpdated } = useSelector((state) => state.user);\n  const { user } = useSelector((state) => state.userDetails);\n\n  const userId = match.params.id;\n\n  useEffect(() => {\n    console.log(user && user._id !== userId);\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n\n      history.push('/admin/users');\n\n      dispatch({\n        type: UPDATE_USER_RESET,\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated, userId, user]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('role', role);\n\n    dispatch(updateUser(user._id, formData));\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={`Update User`} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n              <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                <h1 className=\"mt-2 mb-5\">Update User</h1>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name_field\">Name</label>\n                  <input\n                    type=\"name\"\n                    id=\"name_field\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email_field\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email_field\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"role_field\">Role</label>\n\n                  <select\n                    id=\"role_field\"\n                    className=\"form-control\"\n                    name=\"role\"\n                    value={role}\n                    onChange={(e) => setRole(e.target.value)}\n                  >\n                    <option value=\"user\">user</option>\n                    <option value=\"admin\">admin</option>\n                  </select>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn update-btn btn-block mt-4 mb-3\"\n                >\n                  Update\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productList/ProductList.jsx\",\n    _s = $RefreshSig$();\n\nimport './productList.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../../sidebar/Sidebar';\nimport Loader from '../../../layout/Loader';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../../../actions/productActions';\nimport { DELETE_PRODUCT_RESET } from '../../../../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductList({\n  history\n}) {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const {\n    loading,\n    error,\n    products\n  } = useSelector(state => state.products);\n  const {\n    error: deleteError,\n    isDeleted\n  } = useSelector(state => state.product);\n  useEffect(() => {\n    dispatch(getAdminProducts());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Product deleted successfully');\n      history.push('/admin/products');\n      dispatch({\n        type: DELETE_PRODUCT_RESET\n      });\n    }\n  }, [dispatch, alert, error, deleteError, isDeleted, history]);\n  const columns = [{\n    field: '_id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'product',\n    headerName: 'Product',\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListItem\",\n        children: params.row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: 'stock',\n    headerName: 'Stock',\n    width: 200\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 120\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 160\n  } // {\n  //   field: 'action',\n  //   headerName: 'Action',\n  //   width: 150,\n  //   renderCell: (params) => {\n  //     return (\n  //       <>\n  //         <Link to={'/product/' + params.row._id}>\n  //           <button className=\"productListEdit\">Edit</button>\n  //         </Link>\n  //         <DeleteOutline\n  //           className=\"productListDelete\"\n  //           onClick={() => handleDelete(params.row._id)}\n  //         />\n  //       </>\n  //     );\n  //   },\n  // },\n  ];\n\n  const handleDelete = id => {\n    dispatch(deleteProduct(id));\n  };\n\n  if (!loading && products) {\n    const newProducts = products.map(item => {\n      const {\n        _id,\n        name,\n        stock,\n        seller,\n        price\n      } = item;\n      return {\n        id: _id,\n        name,\n        seller,\n        stock,\n        price\n      };\n    });\n    setData(newProducts);\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productList\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: products,\n        disableSelectionOnClick: true,\n        columns: columns,\n        pageSize: 8,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProductList, \"w8IUfhLgmC/8NOeQqgLSFICnSJU=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productList/ProductList.jsx"],"names":["DataGrid","DeleteOutline","React","useEffect","useState","Link","Sidebar","Loader","useAlert","useDispatch","useSelector","getAdminProducts","deleteProduct","clearErrors","DELETE_PRODUCT_RESET","ProductList","history","alert","dispatch","data","setData","loading","error","products","state","deleteError","isDeleted","product","success","push","type","columns","field","headerName","width","renderCell","params","row","name","handleDelete","id","newProducts","map","item","_id","stock","seller","price","console","log"],"mappings":"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","sourcesContent":["import './productList.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Sidebar from '../../sidebar/Sidebar';\nimport Loader from '../../../layout/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAdminProducts,\n  deleteProduct,\n  clearErrors,\n} from '../../../../actions/productActions';\nimport { DELETE_PRODUCT_RESET } from '../../../../constants/productConstants';\n\nexport default function ProductList({ history }) {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n\n  const { loading, error, products } = useSelector((state) => state.products);\n  const { error: deleteError, isDeleted } = useSelector(\n    (state) => state.product\n  );\n  useEffect(() => {\n    dispatch(getAdminProducts());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Product deleted successfully');\n      history.push('/admin/products');\n      dispatch({ type: DELETE_PRODUCT_RESET });\n    }\n  }, [dispatch, alert, error, deleteError, isDeleted, history]);\n\n  const columns = [\n    { field: '_id', headerName: 'ID', width: 90 },\n    {\n      field: 'product',\n      headerName: 'Product',\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"productListItem\">\n            {/* <img\n              className=\"productListImg\"\n              src={params?.row.images[0].url}\n              alt=\"\"\n            /> */}\n            {params.row.name}\n          </div>\n        );\n      },\n    },\n    { field: 'stock', headerName: 'Stock', width: 200 },\n    {\n      field: 'status',\n      headerName: 'Status',\n      width: 120,\n    },\n    {\n      field: 'price',\n      headerName: 'Price',\n      width: 160,\n    },\n    // {\n    //   field: 'action',\n    //   headerName: 'Action',\n    //   width: 150,\n    //   renderCell: (params) => {\n    //     return (\n    //       <>\n    //         <Link to={'/product/' + params.row._id}>\n    //           <button className=\"productListEdit\">Edit</button>\n    //         </Link>\n    //         <DeleteOutline\n    //           className=\"productListDelete\"\n    //           onClick={() => handleDelete(params.row._id)}\n    //         />\n    //       </>\n    //     );\n    //   },\n    // },\n  ];\n  const handleDelete = (id) => {\n    dispatch(deleteProduct(id));\n  };\n  if (!loading && products) {\n    const newProducts = products.map((item) => {\n      const { _id, name, stock, seller, price } = item;\n\n      return {\n        id: _id,\n        name,\n        seller,\n        stock,\n        price,\n      };\n    });\n    setData(newProducts);\n  }\n\n  console.log(data);\n\n  return (\n    <>\n      <Sidebar />\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"productList\">\n          <DataGrid\n            rows={products}\n            disableSelectionOnClick\n            columns={columns}\n            pageSize={8}\n            checkboxSelection\n          />\n        </div>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
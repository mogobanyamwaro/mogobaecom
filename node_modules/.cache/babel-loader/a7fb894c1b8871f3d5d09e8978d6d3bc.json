{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/order/ListOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myOrders, clearErrors } from '../../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListOrders = () => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrders);\n  useEffect(() => {\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const setOrders = () => {\n    const data = {\n      columns: [{\n        label: 'Order ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Num of Items',\n        field: 'numOfItems',\n        sort: 'asc'\n      }, {\n        label: 'Amount',\n        field: 'amount',\n        sort: 'asc'\n      }, {\n        label: 'Status',\n        field: 'status',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc'\n      }],\n      rows: []\n    };\n    orders && orders.forEach(order => {\n      data.rows.push({\n        id: order._id,\n        numOfItems: order.orderItems.length,\n        amount: `$${order.totalPrice}`,\n        status: order.orderStatus && String(order.orderStatus).includes('Delivered') ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this),\n        actions: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/order/${order._id}`,\n          className: \"btn btn-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-eye\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'My Orders'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-5\",\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      data: setOrders(),\n      className: \"px-3\",\n      bordered: true,\n      striped: true,\n      hover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListOrders, \"YmEfncUQxZ+qfHRSODBLlYTI4+Y=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ListOrders;\nexport default ListOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOrders\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/order/ListOrders.js"],"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","useAlert","useDispatch","useSelector","myOrders","clearErrors","ListOrders","alert","dispatch","loading","error","orders","state","setOrders","data","columns","label","field","sort","rows","forEach","order","push","id","_id","numOfItems","orderItems","length","amount","totalPrice","status","orderStatus","String","includes","color","actions"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\n\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myOrders, clearErrors } from '../../actions/orderActions';\n\nconst ListOrders = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, orders } = useSelector((state) => state.myOrders);\n\n  useEffect(() => {\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const setOrders = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Order ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Num of Items',\n          field: 'numOfItems',\n          sort: 'asc',\n        },\n        {\n          label: 'Amount',\n          field: 'amount',\n          sort: 'asc',\n        },\n        {\n          label: 'Status',\n          field: 'status',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc',\n        },\n      ],\n      rows: [],\n    };\n\n    orders &&\n      orders.forEach((order) => {\n        data.rows.push({\n          id: order._id,\n          numOfItems: order.orderItems.length,\n          amount: `$${order.totalPrice}`,\n          status:\n            order.orderStatus &&\n            String(order.orderStatus).includes('Delivered') ? (\n              <p style={{ color: 'green' }}>{order.orderStatus}</p>\n            ) : (\n              <p style={{ color: 'red' }}>{order.orderStatus}</p>\n            ),\n          actions: (\n            <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n              <i className=\"fa fa-eye\"></i>\n            </Link>\n          ),\n        });\n      });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'My Orders'} />\n\n      <h1 className=\"my-5\">My Orders</h1>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <MDBDataTable\n          data={setOrders()}\n          className=\"px-3\"\n          bordered\n          striped\n          hover\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default ListOrders;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/userList/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../../../layout/MetaData';\nimport Loader from '../../../layout/Loader';\nimport Sidebar from '../../sidebar/Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, deleteUser, clearErrors } from '../../../../actions/userActions';\nimport { DELETE_USER_RESET } from '../../../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UsersList = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    isDeleted\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('User deleted successfully');\n      history.push('/admin/users');\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'User ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        actions: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            className: \"btn btn-primary py-1 px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger py-1 px-2 ml-2\",\n            onClick: () => deleteUserHandler(user._id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersList, \"Y04wUDJmFcgGjJIIVQw3/P3HcoI=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/userList/UserList.jsx"],"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","allUsers","deleteUser","clearErrors","DELETE_USER_RESET","UsersList","history","alert","dispatch","loading","error","users","state","isDeleted","user","success","push","type","deleteUserHandler","id","setUsers","data","columns","label","field","sort","rows","forEach","_id","name","email","role","actions"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\n\nimport MetaData from '../../../layout/MetaData';\nimport Loader from '../../../layout/Loader';\nimport Sidebar from '../../sidebar/Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  allUsers,\n  deleteUser,\n  clearErrors,\n} from '../../../../actions/userActions';\nimport { DELETE_USER_RESET } from '../../../../constants/userConstants';\n\nconst UsersList = ({ history }) => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, users } = useSelector((state) => state.allUsers);\n  const { isDeleted } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('User deleted successfully');\n      history.push('/admin/users');\n      dispatch({ type: DELETE_USER_RESET });\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n\n  const deleteUserHandler = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [\n        {\n          label: 'User ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc',\n        },\n        {\n          label: 'Email',\n          field: 'email',\n          sort: 'asc',\n        },\n        {\n          label: 'Role',\n          field: 'role',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    users.forEach((user) => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n\n        actions: (\n          <Fragment>\n            <Link\n              to={`/admin/user/${user._id}`}\n              className=\"btn btn-primary py-1 px-2\"\n            >\n              <i className=\"fa fa-pencil\"></i>\n            </Link>\n            <button\n              className=\"btn btn-danger py-1 px-2 ml-2\"\n              onClick={() => deleteUserHandler(user._id)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'All Users'} />\n      <>\n        <Sidebar />\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <h1 className=\"my-5\">All Users</h1>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <MDBDataTable\n                data={setUsers()}\n                className=\"px-3\"\n                bordered\n                striped\n                hover\n              />\n            )}\n          </Fragment>\n        </div>\n      </>\n    </Fragment>\n  );\n};\n\nexport default UsersList;\n"]},"metadata":{},"sourceType":"module"}
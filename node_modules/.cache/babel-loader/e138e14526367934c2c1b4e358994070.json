{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, CLEAR_ERRORS } from '../constants/productConstants';\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete product (Admin)\n\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Product (ADMIN)\n\nexport const updateProduct = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/products`);\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get product reviews\n\nexport const getProductReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/reviews?id=${id}`);\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete product review\n\nexport const deleteReview = (id, productId) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    console.log(error.response);\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/actions/productActions.js"],"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","CLEAR_ERRORS","getProducts","keyword","currentPage","price","category","rating","dispatch","type","link","data","get","payload","error","response","message","newProduct","productData","config","headers","post","deleteProduct","id","delete","success","updateProduct","put","getProductDetails","product","newReview","reviewData","getAdminProducts","products","getProductReviews","reviews","deleteReview","productId","console","log","clearErrors"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n  ALL_PRODUCTS_REQUEST,\n  ALL_PRODUCTS_SUCCESS,\n  ALL_PRODUCTS_FAIL,\n  ADMIN_PRODUCTS_REQUEST,\n  ADMIN_PRODUCTS_SUCCESS,\n  ADMIN_PRODUCTS_FAIL,\n  NEW_PRODUCT_REQUEST,\n  NEW_PRODUCT_SUCCESS,\n  NEW_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  NEW_REVIEW_REQUEST,\n  NEW_REVIEW_SUCCESS,\n  NEW_REVIEW_FAIL,\n  GET_REVIEWS_REQUEST,\n  GET_REVIEWS_SUCCESS,\n  GET_REVIEWS_FAIL,\n  DELETE_REVIEW_REQUEST,\n  DELETE_REVIEW_SUCCESS,\n  DELETE_REVIEW_FAIL,\n  CLEAR_ERRORS,\n} from '../constants/productConstants';\n\nexport const getProducts =\n  (keyword = '', currentPage = 1, price, category, rating = 0) =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: ALL_PRODUCTS_REQUEST });\n\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n      if (category) {\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\n      }\n\n      const { data } = await axios.get(link);\n\n      dispatch({\n        type: ALL_PRODUCTS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCTS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\nexport const newProduct = (productData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_PRODUCT_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/v1/admin/product/new`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/product/${id}`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const newReview = (reviewData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_REVIEW_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getAdminProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_PRODUCTS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/admin/products`);\n\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: GET_REVIEWS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\n\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_REVIEW_REQUEST });\n\n    const { data } = await axios.delete(\n      `/api/v1/reviews?id=${id}&productId=${productId}`\n    );\n\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    console.log(error.response);\n\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}
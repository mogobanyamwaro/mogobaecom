{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer // newProductReducer,\n// productReducer,\n// productDetailsReducer,\n// newReviewReducer,\n// productReviewsReducer,\n// reviewReducer,\n} from './reducers/productReducers'; // import {\n//   authReducer,\n//   userReducer,\n//   forgotPasswordReducer,\n//   allUsersReducer,\n//   userDetailsReducer,\n// } from './reducers/userReducers';\n// import { cartReducer } from './reducers/cartReducers';\n// import {\n//   newOrderReducer,\n//   myOrdersReducer,\n//   orderDetailsReducer,\n//   allOrdersReducer,\n//   orderReducer,\n// } from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  products: productsReducer // productDetails: productDetailsReducer,\n  // newProduct: newProductReducer,\n  // product: productReducer,\n  // productReviews: productReviewsReducer,\n  // review: reviewReducer,\n  // auth: authReducer,\n  // user: userReducer,\n  // allUsers: allUsersReducer,\n  // userDetails: userDetailsReducer,\n  // forgotPassword: forgotPasswordReducer,\n  // cart: cartReducer,\n  // newOrder: newOrderReducer,\n  // myOrders: myOrdersReducer,\n  // allOrders: allOrdersReducer,\n  // orderDetails: orderDetailsReducer,\n  // order: orderReducer,\n  // newReview: newReviewReducer,\n\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\n  }\n};\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)));\nexport default store;","map":{"version":3,"sources":["/home/douglas/Music/ProShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","reducer","products","initialState","cart","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middlware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACEC,eADF,CAEE;AACA;AACA;AACA;AACA;AACA;AAPF,OAQO,4BARP,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGL,eAAe,CAAC;AAC9BM,EAAAA,QAAQ,EAAEF,eADoB,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlB8B,CAAD,CAA/B;AAqBA,IAAIG,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;AAIJG,IAAAA,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACVC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADU,GAEV;AANA;AADW,CAAnB;AAWA,MAAMI,SAAS,GAAG,CAACb,KAAD,CAAlB;AACA,MAAMc,KAAK,GAAGjB,WAAW,CACvBM,OADuB,EAEvBE,YAFuB,EAGvBJ,mBAAmB,CAACF,eAAe,CAAC,GAAGc,SAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport {\n  productsReducer,\n  // newProductReducer,\n  // productReducer,\n  // productDetailsReducer,\n  // newReviewReducer,\n  // productReviewsReducer,\n  // reviewReducer,\n} from './reducers/productReducers';\n// import {\n//   authReducer,\n//   userReducer,\n//   forgotPasswordReducer,\n//   allUsersReducer,\n//   userDetailsReducer,\n// } from './reducers/userReducers';\n// import { cartReducer } from './reducers/cartReducers';\n// import {\n//   newOrderReducer,\n//   myOrdersReducer,\n//   orderDetailsReducer,\n//   allOrdersReducer,\n//   orderReducer,\n// } from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  products: productsReducer,\n  // productDetails: productDetailsReducer,\n  // newProduct: newProductReducer,\n  // product: productReducer,\n  // productReviews: productReviewsReducer,\n  // review: reviewReducer,\n  // auth: authReducer,\n  // user: userReducer,\n  // allUsers: allUsersReducer,\n  // userDetails: userDetailsReducer,\n  // forgotPassword: forgotPasswordReducer,\n  // cart: cartReducer,\n  // newOrder: newOrderReducer,\n  // myOrders: myOrdersReducer,\n  // allOrders: allOrdersReducer,\n  // orderDetails: orderDetailsReducer,\n  // order: orderReducer,\n  // newReview: newReviewReducer,\n});\n\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems')\n      ? JSON.parse(localStorage.getItem('cartItems'))\n      : [],\n    shippingInfo: localStorage.getItem('shippingInfo')\n      ? JSON.parse(localStorage.getItem('shippingInfo'))\n      : {},\n  },\n};\n\nconst middlware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
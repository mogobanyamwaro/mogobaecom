{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Music/ProShop/frontend/src/components/cart/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport MetaData from '../layout/MetaData';\nimport CheckoutSteps from './CheckoutSteps';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrder, clearErrors } from '../../actions/orderActions';\nimport { emptyCart } from '../../actions/cartActions';\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  style: {\n    base: {\n      fontSize: '16px'\n    },\n    invalid: {\n      color: '#9e2146'\n    }\n  }\n};\n\nconst Payment = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    cartItems,\n    shippingInfo\n  } = useSelector(state => state.cart);\n  const {\n    error\n  } = useSelector(state => state.newOrder);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n  const order = {\n    orderItems: cartItems,\n    shippingInfo\n  };\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n\n  if (orderInfo) {\n    order.itemsPrice = orderInfo.itemsPrice;\n    order.shippingPrice = orderInfo.shippingPrice;\n    order.taxPrice = orderInfo.taxPrice;\n    order.totalPrice = orderInfo.totalPrice;\n  }\n\n  const paymentData = {\n    amount: Math.round(orderInfo.totalPrice * 100)\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    document.querySelector('#pay_btn').disabled = true;\n    let res;\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      res = await axios.post('/api/v1/payment/process', paymentData, config);\n      const clientSecret = res.data.client_secret;\n      console.log(clientSecret);\n\n      if (!stripe || !elements) {\n        return;\n      }\n\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardNumberElement),\n          billing_details: {\n            name: user.name,\n            email: user.email\n          }\n        }\n      });\n\n      if (result.error) {\n        alert.error(result.error.message);\n        document.querySelector('#pay_btn').disabled = false;\n      } else {\n        // The payment is processed or not\n        if (result.paymentIntent.status === 'succeeded') {\n          order.paymentInfo = {\n            id: result.paymentIntent.id,\n            status: result.paymentIntent.status\n          };\n          dispatch(createOrder(order));\n          dispatch(emptyCart());\n          localStorage.removeItem('cartItems');\n          history.push('/success');\n        } else {\n          alert.error('There is some issue while payment processing');\n        }\n      }\n    } catch (error) {\n      document.querySelector('#pay_btn').disabled = false;\n      alert.error(error.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Payment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      shipping: true,\n      confirmOrder: true,\n      payment: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-4\",\n            children: \"Card Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"card_num_field\",\n              children: \"Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardNumberElement, {\n              type: \"text\",\n              id: \"card_num_field\",\n              className: \"form-control\",\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"card_exp_field\",\n              children: \"Card Expiry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardExpiryElement, {\n              type: \"text\",\n              id: \"card_exp_field\",\n              className: \"form-control\",\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"card_cvc_field\",\n              children: \"Card CVC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardCvcElement, {\n              type: \"text\",\n              id: \"card_cvc_field\",\n              className: \"form-control\",\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pay_btn\",\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            children: [\"Pay \", ` - ${orderInfo && orderInfo.totalPrice}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"RuicJcEeN2a7bmLGvHo1Y47QAd4=\", false, function () {\n  return [useAlert, useStripe, useElements, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/douglas/Music/ProShop/frontend/src/components/cart/Payment.js"],"names":["React","Fragment","useEffect","MetaData","CheckoutSteps","useAlert","useDispatch","useSelector","createOrder","clearErrors","emptyCart","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","axios","options","style","base","fontSize","invalid","color","Payment","history","alert","stripe","elements","dispatch","user","state","auth","cartItems","shippingInfo","cart","error","newOrder","order","orderItems","orderInfo","JSON","parse","sessionStorage","getItem","itemsPrice","shippingPrice","taxPrice","totalPrice","paymentData","amount","Math","round","submitHandler","e","preventDefault","document","querySelector","disabled","res","config","headers","post","clientSecret","data","client_secret","console","log","result","confirmCardPayment","payment_method","card","getElement","billing_details","name","email","message","paymentIntent","status","paymentInfo","id","localStorage","removeItem","push","response"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\n\nimport MetaData from '../layout/MetaData';\nimport CheckoutSteps from './CheckoutSteps';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrder, clearErrors } from '../../actions/orderActions';\nimport { emptyCart } from '../../actions/cartActions';\n\nimport {\n  useStripe,\n  useElements,\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n} from '@stripe/react-stripe-js';\n\nimport axios from 'axios';\n\nconst options = {\n  style: {\n    base: {\n      fontSize: '16px',\n    },\n    invalid: {\n      color: '#9e2146',\n    },\n  },\n};\n\nconst Payment = ({ history }) => {\n  const alert = useAlert();\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.auth);\n  const { cartItems, shippingInfo } = useSelector((state) => state.cart);\n  const { error } = useSelector((state) => state.newOrder);\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const order = {\n    orderItems: cartItems,\n    shippingInfo,\n  };\n\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n  if (orderInfo) {\n    order.itemsPrice = orderInfo.itemsPrice;\n    order.shippingPrice = orderInfo.shippingPrice;\n    order.taxPrice = orderInfo.taxPrice;\n    order.totalPrice = orderInfo.totalPrice;\n  }\n\n  const paymentData = {\n    amount: Math.round(orderInfo.totalPrice * 100),\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    document.querySelector('#pay_btn').disabled = true;\n\n    let res;\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      res = await axios.post('/api/v1/payment/process', paymentData, config);\n\n      const clientSecret = res.data.client_secret;\n\n      console.log(clientSecret);\n\n      if (!stripe || !elements) {\n        return;\n      }\n\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardNumberElement),\n          billing_details: {\n            name: user.name,\n            email: user.email,\n          },\n        },\n      });\n\n      if (result.error) {\n        alert.error(result.error.message);\n        document.querySelector('#pay_btn').disabled = false;\n      } else {\n        // The payment is processed or not\n        if (result.paymentIntent.status === 'succeeded') {\n          order.paymentInfo = {\n            id: result.paymentIntent.id,\n            status: result.paymentIntent.status,\n          };\n\n          dispatch(createOrder(order));\n          dispatch(emptyCart());\n          localStorage.removeItem('cartItems');\n\n          history.push('/success');\n        } else {\n          alert.error('There is some issue while payment processing');\n        }\n      }\n    } catch (error) {\n      document.querySelector('#pay_btn').disabled = false;\n      alert.error(error.response.data.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Payment'} />\n\n      <CheckoutSteps shipping confirmOrder payment />\n\n      <div className='row wrapper'>\n        <div className='col-10 col-lg-5'>\n          <form className='shadow-lg' onSubmit={submitHandler}>\n            <h1 className='mb-4'>Card Info</h1>\n            <div className='form-group'>\n              <label htmlFor='card_num_field'>Card Number</label>\n              <CardNumberElement\n                type='text'\n                id='card_num_field'\n                className='form-control'\n                options={options}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='card_exp_field'>Card Expiry</label>\n              <CardExpiryElement\n                type='text'\n                id='card_exp_field'\n                className='form-control'\n                options={options}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='card_cvc_field'>Card CVC</label>\n              <CardCvcElement\n                type='text'\n                id='card_cvc_field'\n                className='form-control'\n                options={options}\n              />\n            </div>\n\n            <button id='pay_btn' type='submit' className='btn btn-block py-3'>\n              Pay {` - ${orderInfo && orderInfo.totalPrice}`}\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}
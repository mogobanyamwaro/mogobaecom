{"ast":null,"code":"import _slicedToArray from\"/home/douglas/Downloads/ProShop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import MetaData from'../layout/MetaData';import{useAlert}from'react-alert';import{useDispatch,useSelector}from'react-redux';import{updatePassword,clearErrors}from'../../actions/userActions';import{UPDATE_PASSWORD_RESET}from'../../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UpdatePassword=function UpdatePassword(_ref){var history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),oldPassword=_useState2[0],setOldPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var alert=useAlert();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.user;}),error=_useSelector.error,isUpdated=_useSelector.isUpdated,loading=_useSelector.loading;useEffect(function(){if(error){alert.error(error);dispatch(clearErrors());}if(isUpdated){alert.success('Password updated successfully');history.push('/me');dispatch({type:UPDATE_PASSWORD_RESET});}},[dispatch,alert,error,history,isUpdated]);var submitHandler=function submitHandler(e){e.preventDefault();var formData=new FormData();formData.set('oldPassword',oldPassword);formData.set('password',password);dispatch(updatePassword(formData));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:'Change Password'}),/*#__PURE__*/_jsx(\"div\",{className:\"row wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-10 col-lg-5\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"shadow-lg\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mt-2 mb-5\",children:\"Update Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"old_password_field\",children:\"Old Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"old_password_field\",className:\"form-control\",value:oldPassword,onChange:function onChange(e){return setOldPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"new_password_field\",children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"new_password_field\",className:\"form-control\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn update-btn btn-block mt-4 mb-3\",disabled:loading?true:false,children:\"Update Password\"})]})})})]});};export default UpdatePassword;","map":{"version":3,"sources":["/home/douglas/Downloads/ProShop/frontend/src/components/user/UpdatePassword.js"],"names":["React","Fragment","useState","useEffect","MetaData","useAlert","useDispatch","useSelector","updatePassword","clearErrors","UPDATE_PASSWORD_RESET","UpdatePassword","history","oldPassword","setOldPassword","password","setPassword","alert","dispatch","state","user","error","isUpdated","loading","success","push","type","submitHandler","e","preventDefault","formData","FormData","set","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label for=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e) => setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label for=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productReview/ProductReviews.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../../../layout/MetaData'; // import Loader from '../layout/Loader';\n\nimport Sidebar from '../../sidebar/Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductReviews, deleteReview, clearErrors } from '../../../../actions/productActions';\nimport { DELETE_REVIEW_RESET } from '../../../../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductReviews = () => {\n  _s();\n\n  const [productId, setProductId] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    reviews\n  } = useSelector(state => state.productReviews);\n  const {\n    isDeleted,\n    error: deleteError\n  } = useSelector(state => state.review);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (productId !== '') {\n      dispatch(getProductReviews(productId));\n    }\n\n    if (isDeleted) {\n      alert.success('Review deleted successfully');\n      dispatch({\n        type: DELETE_REVIEW_RESET\n      });\n    }\n  }, [dispatch, alert, error, productId, isDeleted, deleteError]);\n\n  const deleteReviewHandler = id => {\n    dispatch(deleteReview(id, productId));\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(getProductReviews(productId));\n  };\n\n  const setReviews = () => {\n    const data = {\n      columns: [{\n        label: 'Review ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Rating',\n        field: 'rating',\n        sort: 'asc'\n      }, {\n        label: 'Comment',\n        field: 'comment',\n        sort: 'asc'\n      }, {\n        label: 'User',\n        field: 'user',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    reviews.forEach(review => {\n      data.rows.push({\n        id: review._id,\n        rating: review.rating,\n        comment: review.comment,\n        user: review.name,\n        actions: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger py-1 px-2 ml-2\",\n          onClick: () => deleteReviewHandler(review._id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Product Reviews'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-5\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: submitHandler,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"productId_field\",\n                    children: \"Enter Product ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"productId_field\",\n                    className: \"form-control\",\n                    value: productId,\n                    onChange: e => setProductId(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"search_button\",\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-block py-2\",\n                  children: \"SEARCH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), reviews && reviews.length > 0 ? /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setReviews(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-5 text-center\",\n            children: \"No Reviews.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductReviews, \"45rfoSQMZWjkT81roXS6vhQgbV4=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductReviews;\nexport default ProductReviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductReviews\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productReview/ProductReviews.js"],"names":["React","Fragment","useState","useEffect","MDBDataTable","MetaData","Sidebar","useAlert","useDispatch","useSelector","getProductReviews","deleteReview","clearErrors","DELETE_REVIEW_RESET","ProductReviews","productId","setProductId","alert","dispatch","error","reviews","state","productReviews","isDeleted","deleteError","review","success","type","deleteReviewHandler","id","submitHandler","e","preventDefault","setReviews","data","columns","label","field","sort","rows","forEach","push","_id","rating","comment","user","name","actions","loading","target","value","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\n\nimport MetaData from '../../../layout/MetaData';\n// import Loader from '../layout/Loader';\nimport Sidebar from '../../sidebar/Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getProductReviews,\n  deleteReview,\n  clearErrors,\n} from '../../../../actions/productActions';\nimport { DELETE_REVIEW_RESET } from '../../../../constants/productConstants';\n\nconst ProductReviews = () => {\n  const [productId, setProductId] = useState('');\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, reviews } = useSelector((state) => state.productReviews);\n  const { isDeleted, error: deleteError } = useSelector(\n    (state) => state.review\n  );\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (productId !== '') {\n      dispatch(getProductReviews(productId));\n    }\n\n    if (isDeleted) {\n      alert.success('Review deleted successfully');\n      dispatch({ type: DELETE_REVIEW_RESET });\n    }\n  }, [dispatch, alert, error, productId, isDeleted, deleteError]);\n\n  const deleteReviewHandler = (id) => {\n    dispatch(deleteReview(id, productId));\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(getProductReviews(productId));\n  };\n\n  const setReviews = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Review ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Rating',\n          field: 'rating',\n          sort: 'asc',\n        },\n        {\n          label: 'Comment',\n          field: 'comment',\n          sort: 'asc',\n        },\n        {\n          label: 'User',\n          field: 'user',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    reviews.forEach((review) => {\n      data.rows.push({\n        id: review._id,\n        rating: review.rating,\n        comment: review.comment,\n        user: review.name,\n\n        actions: (\n          <button\n            className=\"btn btn-danger py-1 px-2 ml-2\"\n            onClick={() => deleteReviewHandler(review._id)}\n          >\n            <i className=\"fa fa-trash\"></i>\n          </button>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Product Reviews'} />\n      <>\n        <>\n          <Sidebar />\n        </>\n        {loading ? (\n          <Loader />\n        ) : (\n          <div className=\"col-12 col-md-10\">\n            <Fragment>\n              <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-5\">\n                  <form onSubmit={submitHandler}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"productId_field\">Enter Product ID</label>\n                      <input\n                        type=\"text\"\n                        id=\"productId_field\"\n                        className=\"form-control\"\n                        value={productId}\n                        onChange={(e) => setProductId(e.target.value)}\n                      />\n                    </div>\n\n                    <button\n                      id=\"search_button\"\n                      type=\"submit\"\n                      className=\"btn btn-primary btn-block py-2\"\n                    >\n                      SEARCH\n                    </button>\n                  </form>\n                </div>\n              </div>\n\n              {reviews && reviews.length > 0 ? (\n                <MDBDataTable\n                  data={setReviews()}\n                  className=\"px-3\"\n                  bordered\n                  striped\n                  hover\n                />\n              ) : (\n                <p className=\"mt-5 text-center\">No Reviews.</p>\n              )}\n            </Fragment>\n          </div>\n        )}\n      </>\n    </Fragment>\n  );\n};\n\nexport default ProductReviews;\n"]},"metadata":{},"sourceType":"module"}
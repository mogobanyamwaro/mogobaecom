{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/route/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  isAdmin,\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuthenticated,\n    loading,\n    user\n  } = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading === false && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        if (isAuthenticated === false) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 22\n          }, this);\n        }\n\n        if (isAdmin === true && user.role !== 'admin') {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 22\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedRoute, \"5r69LXG8DDnfY7zXqiiiVGBh/qA=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/route/ProtectedRoute.js"],"names":["React","Fragment","Route","Redirect","useSelector","ProtectedRoute","isAdmin","component","Component","rest","isAuthenticated","loading","user","state","auth","props","role"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAS,EAAEC,SAAtB;AAAiC,KAAGC;AAApC,CAAD,KAAgD;AAAA;;AACrE,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAqCR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAtD;AAEA,sBACE,QAAC,QAAD;AAAA,cACGH,OAAO,KAAK,KAAZ,iBACC,QAAC,KAAD,OACMF,IADN;AAEE,MAAA,MAAM,EAAGM,KAAD,IAAW;AACjB,YAAIL,eAAe,KAAK,KAAxB,EAA+B;AAC7B,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAED,YAAIJ,OAAO,KAAK,IAAZ,IAAoBM,IAAI,CAACI,IAAL,KAAc,OAAtC,EAA+C;AAC7C,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAED,4BAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AAZH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvBD;;GAAMV,c;UACuCD,W;;;KADvCC,c;AAyBN,eAAeA,cAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n  const { isAuthenticated, loading, user } = useSelector((state) => state.auth);\n\n  return (\n    <Fragment>\n      {loading === false && (\n        <Route\n          {...rest}\n          render={(props) => {\n            if (isAuthenticated === false) {\n              return <Redirect to=\"/login\" />;\n            }\n\n            if (isAdmin === true && user.role !== 'admin') {\n              return <Redirect to=\"/\" />;\n            }\n\n            return <Component {...props} />;\n          }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productList/ProductList.jsx\",\n    _s = $RefreshSig$();\n\nimport './productList.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../../sidebar/Sidebar';\nimport Loader from '../../../layout/Loader';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../../../actions/productActions';\nimport { DELETE_PRODUCT_RESET } from '../../../../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductList({\n  history\n}) {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    products\n  } = useSelector(state => state.products);\n  const {\n    error: deleteError,\n    isDeleted\n  } = useSelector(state => state.product);\n  useEffect(() => {\n    dispatch(getAdminProducts());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Product deleted successfully');\n      history.push('/admin/products');\n      dispatch({\n        type: DELETE_PRODUCT_RESET\n      });\n    }\n  }, [dispatch, alert, error, deleteError, isDeleted, history]);\n  console.log(products); // const columns = [\n  //   {\n  //     field: 'id',\n  //     headerName: 'ID',\n  //     width: 90,\n  //     renderCell: (params) => {\n  //       return <>{params.row._id}</>;\n  //     },\n  //   },\n  //   {\n  //     field: 'product',\n  //     headerName: 'Product',\n  //     width: 200,\n  //     renderCell: (params) => {\n  //       return (\n  //         <div className=\"productListItem\">\n  //           <img className=\"productListImg\" src={params.row?.img} alt=\"\" />\n  //           {params.row.name}\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   { field: 'stock', headerName: 'Stock', width: 200 },\n  //   {\n  //     field: 'status',\n  //     headerName: 'Status',\n  //     width: 120,\n  //   },\n  //   {\n  //     field: 'price',\n  //     headerName: 'Price',\n  //     width: 160,\n  //   },\n  //   {\n  //     field: 'action',\n  //     headerName: 'Action',\n  //     width: 150,\n  //     renderCell: (params) => {\n  //       return (\n  //         <>\n  //           <Link to={'/adminproduct/' + params.row._id}>\n  //             <button className=\"productListEdit\">Edit</button>\n  //           </Link>\n  //           <DeleteOutline\n  //             className=\"productListDelete\"\n  //             onClick={() => handleDelete(params.row._id)}\n  //           />\n  //         </>\n  //       );\n  //     },\n  //   },\n  // ];\n  // const handleDelete = (id) => {\n  //   dispatch(deleteProduct(id));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ProductList, \"F01IyYisrysAkP+Fop0fD2q2010=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productList/ProductList.jsx"],"names":["DataGrid","DeleteOutline","React","useEffect","Link","Sidebar","Loader","useAlert","useDispatch","useSelector","getAdminProducts","deleteProduct","clearErrors","DELETE_PRODUCT_RESET","ProductList","history","alert","dispatch","loading","error","products","state","deleteError","isDeleted","product","success","push","type","console","log"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,QAIO,oCAJP;AAKA,SAASC,oBAAT,QAAqC,wCAArC;;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAkC;AAAA;;AAC/C,QAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAAhD;AACA,QAAM;AAAED,IAAAA,KAAK,EAAEG,WAAT;AAAsBC,IAAAA;AAAtB,MAAoCd,WAAW,CAClDY,KAAD,IAAWA,KAAK,CAACG,OADkC,CAArD;AAGArB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;;AAEA,QAAIS,KAAJ,EAAW;AACTH,MAAAA,KAAK,CAACG,KAAN,CAAYA,KAAZ;AACAF,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACD;;AAED,QAAIU,WAAJ,EAAiB;AACfN,MAAAA,KAAK,CAACG,KAAN,CAAYG,WAAZ;AACAL,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACD;;AAED,QAAIW,SAAJ,EAAe;AACbP,MAAAA,KAAK,CAACS,OAAN,CAAc,8BAAd;AACAV,MAAAA,OAAO,CAACW,IAAR,CAAa,iBAAb;AACAT,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAEd;AAAR,OAAD,CAAR;AACD;AACF,GAlBQ,EAkBN,CAACI,QAAD,EAAWD,KAAX,EAAkBG,KAAlB,EAAyBG,WAAzB,EAAsCC,SAAtC,EAAiDR,OAAjD,CAlBM,CAAT;AAoBAa,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ,EA5B+C,CA8B/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;;GAxGuBN,W;UACRP,Q,EACGC,W,EAEoBC,W,EACKA,W;;;KALpBK,W","sourcesContent":["import './productList.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport React, { useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Sidebar from '../../sidebar/Sidebar';\nimport Loader from '../../../layout/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAdminProducts,\n  deleteProduct,\n  clearErrors,\n} from '../../../../actions/productActions';\nimport { DELETE_PRODUCT_RESET } from '../../../../constants/productConstants';\n\nexport default function ProductList({ history }) {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, products } = useSelector((state) => state.products);\n  const { error: deleteError, isDeleted } = useSelector(\n    (state) => state.product\n  );\n  useEffect(() => {\n    dispatch(getAdminProducts());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Product deleted successfully');\n      history.push('/admin/products');\n      dispatch({ type: DELETE_PRODUCT_RESET });\n    }\n  }, [dispatch, alert, error, deleteError, isDeleted, history]);\n\n  console.log(products);\n\n  // const columns = [\n  //   {\n  //     field: 'id',\n  //     headerName: 'ID',\n  //     width: 90,\n  //     renderCell: (params) => {\n  //       return <>{params.row._id}</>;\n  //     },\n  //   },\n  //   {\n  //     field: 'product',\n  //     headerName: 'Product',\n  //     width: 200,\n  //     renderCell: (params) => {\n  //       return (\n  //         <div className=\"productListItem\">\n  //           <img className=\"productListImg\" src={params.row?.img} alt=\"\" />\n  //           {params.row.name}\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   { field: 'stock', headerName: 'Stock', width: 200 },\n  //   {\n  //     field: 'status',\n  //     headerName: 'Status',\n  //     width: 120,\n  //   },\n  //   {\n  //     field: 'price',\n  //     headerName: 'Price',\n  //     width: 160,\n  //   },\n  //   {\n  //     field: 'action',\n  //     headerName: 'Action',\n  //     width: 150,\n  //     renderCell: (params) => {\n  //       return (\n  //         <>\n  //           <Link to={'/adminproduct/' + params.row._id}>\n  //             <button className=\"productListEdit\">Edit</button>\n  //           </Link>\n  //           <DeleteOutline\n  //             className=\"productListDelete\"\n  //             onClick={() => handleDelete(params.row._id)}\n  //           />\n  //         </>\n  //       );\n  //     },\n  //   },\n  // ];\n  // const handleDelete = (id) => {\n  //   dispatch(deleteProduct(id));\n  // };\n\n  return (\n    <>\n      <Sidebar />\n      {/* {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"productList\">\n          <DataGrid\n            rows={products}\n            disableSelectionOnClick\n            columns={columns}\n            pageSize={8}\n            checkboxSelection\n          />\n        </div>\n      )} */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
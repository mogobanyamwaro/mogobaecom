{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productList/ProductList.jsx\",\n    _s = $RefreshSig$();\n\nimport './productList.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../../sidebar/Sidebar';\nimport Loader from '../../../layout/Loader';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../../../actions/productActions';\nimport { DELETE_PRODUCT_RESET } from '../../../../constants/productConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductList({\n  history\n}) {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    products\n  } = useSelector(state => state.products);\n  const {\n    error: deleteError,\n    isDeleted\n  } = useSelector(state => state.product);\n  useEffect(() => {\n    dispatch(getAdminProducts());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Product deleted successfully');\n      history.push('/admin/products');\n      dispatch({\n        type: DELETE_PRODUCT_RESET\n      });\n    }\n  }, [dispatch, alert, error, deleteError, isDeleted, history]);\n\n  const handleDelete = id => {\n    dispatch(deleteProduct(id));\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: params.row._id\n      }, void 0, false);\n    }\n  }, // {\n  //   field: 'product',\n  //   headerName: 'Product',\n  //   width: 200,\n  //   renderCell: (params) => {\n  //     return (\n  //       <div className=\"productListItem\">\n  //         <img className=\"productListImg\" src={params.row?.img} alt=\"\" />\n  //         {params.row.name}\n  //       </div>\n  //     );\n  //   },\n  // },\n  {\n    field: 'stock',\n    headerName: 'Stock',\n    width: 200\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 120\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 160\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/adminproduct/' + params.row._id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"productListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"productListDelete\",\n          onClick: () => handleDelete(params.row._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productList\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: products,\n        disableSelectionOnClick: true,\n        columns: columns,\n        pageSize: 8,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProductList, \"F01IyYisrysAkP+Fop0fD2q2010=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/productList/ProductList.jsx"],"names":["DataGrid","DeleteOutline","React","useEffect","Link","Sidebar","Loader","useAlert","useDispatch","useSelector","getAdminProducts","deleteProduct","clearErrors","DELETE_PRODUCT_RESET","ProductList","history","alert","dispatch","loading","error","products","state","deleteError","isDeleted","product","success","push","type","handleDelete","id","columns","field","headerName","width","renderCell","params","row","_id"],"mappings":"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","sourcesContent":["import './productList.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport React, { useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Sidebar from '../../sidebar/Sidebar';\nimport Loader from '../../../layout/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAdminProducts,\n  deleteProduct,\n  clearErrors,\n} from '../../../../actions/productActions';\nimport { DELETE_PRODUCT_RESET } from '../../../../constants/productConstants';\n\nexport default function ProductList({ history }) {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, products } = useSelector((state) => state.products);\n  const { error: deleteError, isDeleted } = useSelector(\n    (state) => state.product\n  );\n\n  useEffect(() => {\n    dispatch(getAdminProducts());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Product deleted successfully');\n      history.push('/admin/products');\n      dispatch({ type: DELETE_PRODUCT_RESET });\n    }\n  }, [dispatch, alert, error, deleteError, isDeleted, history]);\n\n  const handleDelete = (id) => {\n    dispatch(deleteProduct(id));\n  };\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'ID',\n      width: 90,\n      renderCell: (params) => {\n        return <>{params.row._id}</>;\n      },\n    },\n    // {\n    //   field: 'product',\n    //   headerName: 'Product',\n    //   width: 200,\n    //   renderCell: (params) => {\n    //     return (\n    //       <div className=\"productListItem\">\n    //         <img className=\"productListImg\" src={params.row?.img} alt=\"\" />\n    //         {params.row.name}\n    //       </div>\n    //     );\n    //   },\n    // },\n    { field: 'stock', headerName: 'Stock', width: 200 },\n    {\n      field: 'status',\n      headerName: 'Status',\n      width: 120,\n    },\n    {\n      field: 'price',\n      headerName: 'Price',\n      width: 160,\n    },\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={'/adminproduct/' + params.row._id}>\n              <button className=\"productListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Sidebar />\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"productList\">\n          <DataGrid\n            rows={products}\n            disableSelectionOnClick\n            columns={columns}\n            pageSize={8}\n            checkboxSelection\n          />\n        </div>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
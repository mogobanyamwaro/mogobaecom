{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/orderList/OrdersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport MetaData from '../../../layout/MetaData';\nimport Loader from '../../../layout/Loader';\nimport Sidebar from '../../sidebar/Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allOrders, deleteOrder, clearErrors } from '../../../../actions/orderActions';\nimport { DELETE_ORDER_RESET } from '../../../../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrdersList = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [rows, setRows] = useState([]);\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.allOrders);\n  const {\n    isDeleted\n  } = useSelector(state => state.order);\n  useEffect(() => {\n    dispatch(allOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Order deleted successfully');\n      history.push('/admin/orders');\n      dispatch({\n        type: DELETE_ORDER_RESET\n      });\n    }\n\n    if (!loading && orders) {\n      orders.forEach(order => {\n        setRows(prevRow => {\n          return [...prevRow, {\n            id: order._id,\n            numofItems: order.orderItems.length,\n            amount: order.totalPrice,\n            status: order.orderStatus\n          }];\n        });\n      });\n      console.log(rows);\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n\n  const deleteOrderHandler = id => {\n    dispatch(deleteOrder(id));\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'product',\n    headerName: 'Product',\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"productListImg\",\n          src: params.row.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), params.row.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: 'stock',\n    headerName: 'Stock',\n    width: 200\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 120,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"params.row.status.includes('Delivered')?(\", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: params.row.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), \") : (\", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: params.row.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), \"),\"]\n      }, void 0, true);\n    }\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 160\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/order/${params.row.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"productListEdit\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"productListDelete\",\n          onClick: () => deleteOrderHandler(params.row.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Orders'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"hellooo OrdersList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrdersList, \"L+cKzm7fbe/5f+0id+OgLH0O8Rw=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = OrdersList;\nexport default OrdersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersList\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/orderList/OrdersList.js"],"names":["React","Fragment","useState","useEffect","Link","DataGrid","DeleteOutline","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","allOrders","deleteOrder","clearErrors","DELETE_ORDER_RESET","OrdersList","history","alert","dispatch","rows","setRows","loading","error","orders","state","isDeleted","order","success","push","type","forEach","prevRow","id","_id","numofItems","orderItems","length","amount","totalPrice","status","orderStatus","console","log","deleteOrderHandler","columns","field","headerName","width","renderCell","params","row","image","name","color"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\n\nimport MetaData from '../../../layout/MetaData';\nimport Loader from '../../../layout/Loader';\nimport Sidebar from '../../sidebar/Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  allOrders,\n  deleteOrder,\n  clearErrors,\n} from '../../../../actions/orderActions';\nimport { DELETE_ORDER_RESET } from '../../../../constants/orderConstants';\n\nconst OrdersList = ({ history }) => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [rows, setRows] = useState([]);\n\n  const { loading, error, orders } = useSelector((state) => state.allOrders);\n  const { isDeleted } = useSelector((state) => state.order);\n\n  useEffect(() => {\n    dispatch(allOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Order deleted successfully');\n      history.push('/admin/orders');\n      dispatch({ type: DELETE_ORDER_RESET });\n    }\n    if (!loading && orders) {\n      orders.forEach((order) => {\n        setRows((prevRow) => {\n          return [\n            ...prevRow,\n            {\n              id: order._id,\n              numofItems: order.orderItems.length,\n              amount: order.totalPrice,\n              status: order.orderStatus,\n            },\n          ];\n        });\n      });\n      console.log(rows);\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n\n  const deleteOrderHandler = (id) => {\n    dispatch(deleteOrder(id));\n  };\n\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 90 },\n    {\n      field: 'product',\n      headerName: 'Product',\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"productListItem\">\n            <img className=\"productListImg\" src={params.row.image} alt=\"\" />\n            {params.row.name}\n          </div>\n        );\n      },\n    },\n    { field: 'stock', headerName: 'Stock', width: 200 },\n    {\n      field: 'status',\n      headerName: 'Status',\n      width: 120,\n      renderCell: (params) => {\n        return (\n          <>\n            params.row.status.includes('Delivered')?(\n            <p style={{ color: 'green' }}>{params.row.status}</p>) : (\n            <p style={{ color: 'red' }}>{params.row.status}</p>\n            ),\n          </>\n        );\n      },\n    },\n    {\n      field: 'price',\n      headerName: 'Price',\n      width: 160,\n    },\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={`/admin/order/${params.row.id}`}>\n              <button className=\"productListEdit\">\n                <i className=\"fa fa-eye\"></i>\n              </button>\n            </Link>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => deleteOrderHandler(params.row.id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <MetaData title={'All Orders'} />\n      <h2>hellooo OrdersList</h2>\n    </Fragment>\n  );\n};\n\nexport default OrdersList;\n"]},"metadata":{},"sourceType":"module"}
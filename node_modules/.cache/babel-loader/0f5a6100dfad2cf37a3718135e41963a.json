{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/cart/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport MetaData from '../layout/MetaData';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrder, clearErrors } from '../../actions/orderActions';\nimport { emptyCart } from '../../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = ({\n  history,\n  onSuccess,\n  toPay\n}) => {\n  _s();\n\n  let env = 'sandbox';\n  let currency = 'USD';\n  let total = toPay;\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    cartItems,\n    shippingInfo\n  } = useSelector(state => state.cart);\n  const {\n    error\n  } = useSelector(state => state.newOrder);\n  const client = {\n    sandbox: 'AcD3f6HIEvhdlMKZ9W8VnCazj0qhMbdZKPq9JixLGyY6wbnWzJi3i-XC_zW_cyNYnbWxcq6wxhmzhKll',\n    production: 'YOUR-PRODUCTION-APP-ID'\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n  const order = {\n    orderItems: cartItems,\n    shippingInfo\n  };\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n\n  if (orderInfo) {\n    order.itemsPrice = orderInfo.itemsPrice;\n    order.shippingPrice = orderInfo.shippingPrice;\n    order.taxPrice = orderInfo.taxPrice;\n    order.totalPrice = orderInfo.totalPrice;\n  } // Oncancel Function\n\n\n  const onCancel = data => {\n    console.log('The payment was cancelled!', data);\n  }; // On Error function\n\n\n  const onError = err => {\n    console.log('Error!', err);\n  };\n\n  const onSuccesso = payment => {\n    console.log('The payment was succeeded!', payment);\n    order.paymentInfo = {\n      id: payment.paymentID,\n      status: payment.paid\n    };\n\n    try {\n      onSuccess(payment);\n      dispatch(createOrder(order));\n      dispatch(emptyCart());\n    } catch (error) {\n      alert.error(error.response.data.message);\n    }\n\n    localStorage.removeItem('cartItems');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Payment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaypalExpressBtn, {\n      env: env,\n      client: client,\n      currency: currency,\n      total: total,\n      onError: onError,\n      onSuccess: onSuccesso,\n      onCancel: onCancel,\n      style: {\n        size: 'medium',\n        color: 'gold',\n        shape: 'rect',\n        label: 'checkout'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"5LTzOPNpEFSA8pLxC8mWK8ZnpCw=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/cart/Payment.js"],"names":["React","Fragment","useEffect","MetaData","PaypalExpressBtn","useAlert","useDispatch","useSelector","createOrder","clearErrors","emptyCart","Payment","history","onSuccess","toPay","env","currency","total","alert","dispatch","cartItems","shippingInfo","state","cart","error","newOrder","client","sandbox","production","order","orderItems","orderInfo","JSON","parse","sessionStorage","getItem","itemsPrice","shippingPrice","taxPrice","totalPrice","onCancel","data","console","log","onError","err","onSuccesso","payment","paymentInfo","id","paymentID","status","paid","response","message","localStorage","removeItem","size","color","shape","label"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\n\nimport MetaData from '../layout/MetaData';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrder, clearErrors } from '../../actions/orderActions';\nimport { emptyCart } from '../../actions/cartActions';\n\nconst Payment = ({ history, onSuccess, toPay }) => {\n  let env = 'sandbox';\n  let currency = 'USD';\n  let total = toPay;\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { cartItems, shippingInfo } = useSelector((state) => state.cart);\n  const { error } = useSelector((state) => state.newOrder);\n  const client = {\n    sandbox:\n      'AcD3f6HIEvhdlMKZ9W8VnCazj0qhMbdZKPq9JixLGyY6wbnWzJi3i-XC_zW_cyNYnbWxcq6wxhmzhKll',\n    production: 'YOUR-PRODUCTION-APP-ID',\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const order = {\n    orderItems: cartItems,\n    shippingInfo,\n  };\n\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n  if (orderInfo) {\n    order.itemsPrice = orderInfo.itemsPrice;\n    order.shippingPrice = orderInfo.shippingPrice;\n    order.taxPrice = orderInfo.taxPrice;\n    order.totalPrice = orderInfo.totalPrice;\n  }\n  // Oncancel Function\n  const onCancel = (data) => {\n    console.log('The payment was cancelled!', data);\n  };\n  // On Error function\n  const onError = (err) => {\n    console.log('Error!', err);\n  };\n\n  const onSuccesso = (payment) => {\n    console.log('The payment was succeeded!', payment);\n    order.paymentInfo = {\n      id: payment.paymentID,\n      status: payment.paid,\n    };\n\n    try {\n      onSuccess(payment);\n      dispatch(createOrder(order));\n      dispatch(emptyCart());\n    } catch (error) {\n      alert.error(error.response.data.message);\n    }\n    localStorage.removeItem('cartItems');\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Payment'} />\n\n      <PaypalExpressBtn\n        env={env}\n        client={client}\n        currency={currency}\n        total={total}\n        onError={onError}\n        onSuccess={onSuccesso}\n        onCancel={onCancel}\n        style={{\n          size: 'medium',\n          color: 'gold',\n          shape: 'rect',\n          label: 'checkout',\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/updateProduct/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport './updateproduct.css';\nimport MetaData from '../../../layout/MetaData';\nimport Sidebar from '../../sidebar/Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProduct, getProductDetails, clearErrors } from '../../../../actions/productActions';\nimport { UPDATE_PRODUCT_RESET } from '../../../../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(0);\n  const [seller, setSeller] = useState('');\n  const [images, setImages] = useState([]);\n  const [oldImages, setOldImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const categories = ['Electronics', 'Cameras', 'Laptops', 'Accessories', 'Headphones', 'Food', 'Books', 'Clothes/Shoes', 'Beauty/Health', 'Sports', 'Outdoor', 'Home'];\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    product\n  } = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error: updateError,\n    isUpdated\n  } = useSelector(state => state.product);\n  const productId = match.params.id;\n  useEffect(() => {\n    if (product && product._id !== productId) {\n      dispatch(getProductDetails(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setDescription(product.description);\n      setCategory(product.category);\n      setSeller(product.seller);\n      setStock(product.stock);\n      setOldImages(product.images);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      history.push('/admin/products');\n      alert.success('Product updated successfully');\n      dispatch({\n        type: UPDATE_PRODUCT_RESET\n      });\n    }\n  }, [dispatch, alert, error, isUpdated, history, updateError, product, productId]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('price', price);\n    formData.set('description', description);\n    formData.set('category', category);\n    formData.set('stock', stock);\n    formData.set('seller', seller);\n    images.forEach(image => {\n      formData.append('images', image);\n    });\n    dispatch(updateProduct(product._id, formData));\n  };\n\n  const onChange = e => {\n    const files = Array.from(e.target.files);\n    setImagesPreview([]);\n    setImages([]);\n    setOldImages([]);\n    files.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview(oldArray => [...oldArray, reader.result]);\n          setImages(oldArray => [...oldArray, reader.result]);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Update Product'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newProduct\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"addProductTitle\",\n        children: \"New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"addProductForm\",\n        onSubmit: submitHandler,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-4\",\n          children: \"Update Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProductItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name_field\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name_field\",\n            className: \"form-control\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProductItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price_field\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"price_field\",\n            className: \"form-control\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProductItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description_field\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"description_field\",\n            rows: \"8\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProductItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category_field\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"category_field\",\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProductItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"stock_field\",\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"stock_field\",\n            className: \"form-control\",\n            value: stock,\n            onChange: e => setStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProductItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"seller_field\",\n            children: \"Seller Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"seller_field\",\n            className: \"form-control\",\n            value: seller,\n            onChange: e => setSeller(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProductItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-file\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"product_images\",\n              className: \"custom-file-input\",\n              id: \"customFile\",\n              onChange: onChange,\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"custom-file-label\",\n              htmlFor: \"customFile\",\n              children: \"Choose Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), oldImages && oldImages.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img.url,\n            alt: img.url,\n            className: \"mt-3 mr-2\",\n            width: \"55\",\n            height: \"52\"\n          }, img, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)), imagesPreview.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"Images Preview\",\n            className: \"mt-3 mr-2\",\n            width: \"55\",\n            height: \"52\"\n          }, img, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login_button\",\n          type: \"submit\",\n          className: \"addProductButton\",\n          disabled: loading ? true : false,\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProduct, \"vOUnrmd8NaJDPNZNCbtzYB7LB/A=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/home/douglas/Pictures/deploy ecommerce to aws/frontend/src/components/admin/pages/updateProduct/UpdateProduct.js"],"names":["React","Fragment","useState","useEffect","MetaData","Sidebar","useAlert","useDispatch","useSelector","updateProduct","getProductDetails","clearErrors","UPDATE_PRODUCT_RESET","UpdateProduct","match","history","name","setName","price","setPrice","description","setDescription","category","setCategory","stock","setStock","seller","setSeller","images","setImages","oldImages","setOldImages","imagesPreview","setImagesPreview","categories","alert","dispatch","error","product","state","productDetails","loading","updateError","isUpdated","productId","params","id","_id","push","success","type","submitHandler","e","preventDefault","formData","FormData","set","forEach","image","append","onChange","files","Array","from","target","file","reader","FileReader","onload","readyState","oldArray","result","readAsDataURL","value","map","img","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAO,qBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,aADF,EAEEC,iBAFF,EAGEC,WAHF,QAIO,oCAJP;AAKA,SAASC,oBAAT,QAAqC,wCAArC;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC8B,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMgC,UAAU,GAAG,CACjB,aADiB,EAEjB,SAFiB,EAGjB,SAHiB,EAIjB,aAJiB,EAKjB,YALiB,EAMjB,MANiB,EAOjB,OAPiB,EAQjB,eARiB,EASjB,eATiB,EAUjB,QAViB,EAWjB,SAXiB,EAYjB,MAZiB,CAAnB;AAeA,QAAMC,KAAK,GAAG7B,QAAQ,EAAtB;AACA,QAAM8B,QAAQ,GAAG7B,WAAW,EAA5B;AAEA,QAAM;AAAE8B,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqB9B,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAAtC;AACA,QAAM;AACJC,IAAAA,OADI;AAEJJ,IAAAA,KAAK,EAAEK,WAFH;AAGJC,IAAAA;AAHI,MAIFnC,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAJf;AAMA,QAAMM,SAAS,GAAG9B,KAAK,CAAC+B,MAAN,CAAaC,EAA/B;AAEA3C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImC,OAAO,IAAIA,OAAO,CAACS,GAAR,KAAgBH,SAA/B,EAA0C;AACxCR,MAAAA,QAAQ,CAAC1B,iBAAiB,CAACkC,SAAD,CAAlB,CAAR;AACD,KAFD,MAEO;AACL3B,MAAAA,OAAO,CAACqB,OAAO,CAACtB,IAAT,CAAP;AACAG,MAAAA,QAAQ,CAACmB,OAAO,CAACpB,KAAT,CAAR;AACAG,MAAAA,cAAc,CAACiB,OAAO,CAAClB,WAAT,CAAd;AACAG,MAAAA,WAAW,CAACe,OAAO,CAAChB,QAAT,CAAX;AACAK,MAAAA,SAAS,CAACW,OAAO,CAACZ,MAAT,CAAT;AACAD,MAAAA,QAAQ,CAACa,OAAO,CAACd,KAAT,CAAR;AACAO,MAAAA,YAAY,CAACO,OAAO,CAACV,MAAT,CAAZ;AACD;;AAED,QAAIS,KAAJ,EAAW;AACTF,MAAAA,KAAK,CAACE,KAAN,CAAYA,KAAZ;AACAD,MAAAA,QAAQ,CAACzB,WAAW,EAAZ,CAAR;AACD;;AAED,QAAI+B,WAAJ,EAAiB;AACfP,MAAAA,KAAK,CAACE,KAAN,CAAYK,WAAZ;AACAN,MAAAA,QAAQ,CAACzB,WAAW,EAAZ,CAAR;AACD;;AAED,QAAIgC,SAAJ,EAAe;AACb5B,MAAAA,OAAO,CAACiC,IAAR,CAAa,iBAAb;AACAb,MAAAA,KAAK,CAACc,OAAN,CAAc,8BAAd;AACAb,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAEtC;AAAR,OAAD,CAAR;AACD;AACF,GA5BQ,EA4BN,CACDwB,QADC,EAEDD,KAFC,EAGDE,KAHC,EAIDM,SAJC,EAKD5B,OALC,EAMD2B,WANC,EAODJ,OAPC,EAQDM,SARC,CA5BM,CAAT;;AAuCA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,GAAT,CAAa,MAAb,EAAqBxC,IAArB;AACAsC,IAAAA,QAAQ,CAACE,GAAT,CAAa,OAAb,EAAsBtC,KAAtB;AACAoC,IAAAA,QAAQ,CAACE,GAAT,CAAa,aAAb,EAA4BpC,WAA5B;AACAkC,IAAAA,QAAQ,CAACE,GAAT,CAAa,UAAb,EAAyBlC,QAAzB;AACAgC,IAAAA,QAAQ,CAACE,GAAT,CAAa,OAAb,EAAsBhC,KAAtB;AACA8B,IAAAA,QAAQ,CAACE,GAAT,CAAa,QAAb,EAAuB9B,MAAvB;AAEAE,IAAAA,MAAM,CAAC6B,OAAP,CAAgBC,KAAD,IAAW;AACxBJ,MAAAA,QAAQ,CAACK,MAAT,CAAgB,QAAhB,EAA0BD,KAA1B;AACD,KAFD;AAIAtB,IAAAA,QAAQ,CAAC3B,aAAa,CAAC6B,OAAO,CAACS,GAAT,EAAcO,QAAd,CAAd,CAAR;AACD,GAhBD;;AAkBA,QAAMM,QAAQ,GAAIR,CAAD,IAAO;AACtB,UAAMS,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWX,CAAC,CAACY,MAAF,CAASH,KAApB,CAAd;AAEA5B,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAJ,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AAEA8B,IAAAA,KAAK,CAACJ,OAAN,CAAeQ,IAAD,IAAU;AACtB,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AACpB,YAAIF,MAAM,CAACG,UAAP,KAAsB,CAA1B,EAA6B;AAC3BpC,UAAAA,gBAAgB,CAAEqC,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcJ,MAAM,CAACK,MAArB,CAAf,CAAhB;AACA1C,UAAAA,SAAS,CAAEyC,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcJ,MAAM,CAACK,MAArB,CAAf,CAAT;AACD;AACF,OALD;;AAOAL,MAAAA,MAAM,CAACM,aAAP,CAAqBP,IAArB;AACD,KAXD;AAYD,GAnBD;;AAqBA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,QAAQ,EAAEd,aAFZ;AAGE,QAAA,OAAO,EAAC,qBAHV;AAAA,gCAKE;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,YAFL;AAGE,YAAA,SAAS,EAAC,cAHZ;AAIE,YAAA,KAAK,EAAEnC,IAJT;AAKE,YAAA,QAAQ,EAAGoC,CAAD,IAAOnC,OAAO,CAACmC,CAAC,CAACY,MAAF,CAASS,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAkBE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,aAFL;AAGE,YAAA,SAAS,EAAC,cAHZ;AAIE,YAAA,KAAK,EAAEvD,KAJT;AAKE,YAAA,QAAQ,EAAGkC,CAAD,IAAOjC,QAAQ,CAACiC,CAAC,CAACY,MAAF,CAASS,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eA6BE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,EAAE,EAAC,mBAFL;AAGE,YAAA,IAAI,EAAC,GAHP;AAIE,YAAA,KAAK,EAAErD,WAJT;AAKE,YAAA,QAAQ,EAAGgC,CAAD,IAAO/B,cAAc,CAAC+B,CAAC,CAACY,MAAF,CAASS,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,eAwCE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,EAAE,EAAC,gBAFL;AAGE,YAAA,KAAK,EAAEnD,QAHT;AAIE,YAAA,QAAQ,EAAG8B,CAAD,IAAO7B,WAAW,CAAC6B,CAAC,CAACY,MAAF,CAASS,KAAV,CAJ9B;AAAA,sBAMGvC,UAAU,CAACwC,GAAX,CAAgBpD,QAAD,iBACd;AAAuB,cAAA,KAAK,EAAEA,QAA9B;AAAA,wBACGA;AADH,eAAaA,QAAb;AAAA;AAAA;AAAA;AAAA,oBADD;AANH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxCF,eAuDE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,EAAE,EAAC,aAFL;AAGE,YAAA,SAAS,EAAC,cAHZ;AAIE,YAAA,KAAK,EAAEE,KAJT;AAKE,YAAA,QAAQ,EAAG4B,CAAD,IAAO3B,QAAQ,CAAC2B,CAAC,CAACY,MAAF,CAASS,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvDF,eAkEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,cAFL;AAGE,YAAA,SAAS,EAAC,cAHZ;AAIE,YAAA,KAAK,EAAE/C,MAJT;AAKE,YAAA,QAAQ,EAAG0B,CAAD,IAAOzB,SAAS,CAACyB,CAAC,CAACY,MAAF,CAASS,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEF,eA6EE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAC,gBAFP;AAGE,cAAA,SAAS,EAAC,mBAHZ;AAIE,cAAA,EAAE,EAAC,YAJL;AAKE,cAAA,QAAQ,EAAEb,QALZ;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,SAAS,EAAC,mBAAjB;AAAqC,cAAA,OAAO,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAiBG9B,SAAS,IACRA,SAAS,CAAC4C,GAAV,CAAeC,GAAD,iBACZ;AAEE,YAAA,GAAG,EAAEA,GAAG,CAACC,GAFX;AAGE,YAAA,GAAG,EAAED,GAAG,CAACC,GAHX;AAIE,YAAA,SAAS,EAAC,WAJZ;AAKE,YAAA,KAAK,EAAC,IALR;AAME,YAAA,MAAM,EAAC;AANT,aACOD,GADP;AAAA;AAAA;AAAA;AAAA,kBADF,CAlBJ,EA6BG3C,aAAa,CAAC0C,GAAd,CAAmBC,GAAD,iBACjB;AACE,YAAA,GAAG,EAAEA,GADP;AAGE,YAAA,GAAG,EAAC,gBAHN;AAIE,YAAA,SAAS,EAAC,WAJZ;AAKE,YAAA,KAAK,EAAC,IALR;AAME,YAAA,MAAM,EAAC;AANT,aAEOA,GAFP;AAAA;AAAA;AAAA;AAAA,kBADD,CA7BH;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7EF,eAsHE;AACE,UAAA,EAAE,EAAC,cADL;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAC,kBAHZ;AAIE,UAAA,QAAQ,EAAElC,OAAO,GAAG,IAAH,GAAU,KAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwID,CA7PD;;GAAM5B,a;UA2BUP,Q,EACGC,W,EAEUC,W,EAKvBA,W;;;KAnCAK,a;AA+PN,eAAeA,aAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport './updateproduct.css';\nimport MetaData from '../../../layout/MetaData';\nimport Sidebar from '../../sidebar/Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateProduct,\n  getProductDetails,\n  clearErrors,\n} from '../../../../actions/productActions';\nimport { UPDATE_PRODUCT_RESET } from '../../../../constants/productConstants';\n\nconst UpdateProduct = ({ match, history }) => {\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(0);\n  const [seller, setSeller] = useState('');\n  const [images, setImages] = useState([]);\n\n  const [oldImages, setOldImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n\n  const categories = [\n    'Electronics',\n    'Cameras',\n    'Laptops',\n    'Accessories',\n    'Headphones',\n    'Food',\n    'Books',\n    'Clothes/Shoes',\n    'Beauty/Health',\n    'Sports',\n    'Outdoor',\n    'Home',\n  ];\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, product } = useSelector((state) => state.productDetails);\n  const {\n    loading,\n    error: updateError,\n    isUpdated,\n  } = useSelector((state) => state.product);\n\n  const productId = match.params.id;\n\n  useEffect(() => {\n    if (product && product._id !== productId) {\n      dispatch(getProductDetails(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setDescription(product.description);\n      setCategory(product.category);\n      setSeller(product.seller);\n      setStock(product.stock);\n      setOldImages(product.images);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      history.push('/admin/products');\n      alert.success('Product updated successfully');\n      dispatch({ type: UPDATE_PRODUCT_RESET });\n    }\n  }, [\n    dispatch,\n    alert,\n    error,\n    isUpdated,\n    history,\n    updateError,\n    product,\n    productId,\n  ]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('price', price);\n    formData.set('description', description);\n    formData.set('category', category);\n    formData.set('stock', stock);\n    formData.set('seller', seller);\n\n    images.forEach((image) => {\n      formData.append('images', image);\n    });\n\n    dispatch(updateProduct(product._id, formData));\n  };\n\n  const onChange = (e) => {\n    const files = Array.from(e.target.files);\n\n    setImagesPreview([]);\n    setImages([]);\n    setOldImages([]);\n\n    files.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview((oldArray) => [...oldArray, reader.result]);\n          setImages((oldArray) => [...oldArray, reader.result]);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Update Product'} />\n      <Sidebar />\n      <div className=\"newProduct\">\n        <h1 className=\"addProductTitle\">New Product</h1>\n        <form\n          className=\"addProductForm\"\n          onSubmit={submitHandler}\n          encType=\"multipart/form-data\"\n        >\n          <h1 className=\"mb-4\">Update Product</h1>\n\n          <div className=\"addProductItem\">\n            <label htmlFor=\"name_field\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name_field\"\n              className=\"form-control\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n\n          <div className=\"addProductItem\">\n            <label htmlFor=\"price_field\">Price</label>\n            <input\n              type=\"text\"\n              id=\"price_field\"\n              className=\"form-control\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            />\n          </div>\n\n          <div className=\"addProductItem\">\n            <label htmlFor=\"description_field\">Description</label>\n            <textarea\n              className=\"form-control\"\n              id=\"description_field\"\n              rows=\"8\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></textarea>\n          </div>\n\n          <div className=\"addProductItem\">\n            <label htmlFor=\"category_field\">Category</label>\n            <select\n              className=\"form-control\"\n              id=\"category_field\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            >\n              {categories.map((category) => (\n                <option key={category} value={category}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"addProductItem\">\n            <label htmlFor=\"stock_field\">Stock</label>\n            <input\n              type=\"number\"\n              id=\"stock_field\"\n              className=\"form-control\"\n              value={stock}\n              onChange={(e) => setStock(e.target.value)}\n            />\n          </div>\n\n          <div className=\"addProductItem\">\n            <label htmlFor=\"seller_field\">Seller Name</label>\n            <input\n              type=\"text\"\n              id=\"seller_field\"\n              className=\"form-control\"\n              value={seller}\n              onChange={(e) => setSeller(e.target.value)}\n            />\n          </div>\n\n          <div className=\"addProductItem\">\n            <label>Images</label>\n\n            <div className=\"custom-file\">\n              <input\n                type=\"file\"\n                name=\"product_images\"\n                className=\"custom-file-input\"\n                id=\"customFile\"\n                onChange={onChange}\n                multiple\n              />\n              <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                Choose Images\n              </label>\n            </div>\n\n            {oldImages &&\n              oldImages.map((img) => (\n                <img\n                  key={img}\n                  src={img.url}\n                  alt={img.url}\n                  className=\"mt-3 mr-2\"\n                  width=\"55\"\n                  height=\"52\"\n                />\n              ))}\n\n            {imagesPreview.map((img) => (\n              <img\n                src={img}\n                key={img}\n                alt=\"Images Preview\"\n                className=\"mt-3 mr-2\"\n                width=\"55\"\n                height=\"52\"\n              />\n            ))}\n          </div>\n\n          <button\n            id=\"login_button\"\n            type=\"submit\"\n            className=\"addProductButton\"\n            disabled={loading ? true : false}\n          >\n            UPDATE\n          </button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}
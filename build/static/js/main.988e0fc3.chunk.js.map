{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","components/product/ProductDetails.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstants.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/route/ProtectedRoute.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loadUser","dispatch","a","type","axios","get","data","payload","user","response","message","allUsers","users","clearErrors","Search","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","id","placeholder","onChange","target","value","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","cartItems","cart","to","src","render","style","textDecoration","length","avatar","url","alt","name","role","onClick","success","Footer","href","action","required","cols","rows","MetaData","title","Helmet","Product","product","col","images","_id","width","ratings","numOfReviews","price","Loader","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","getProductDetails","getAdminProducts","products","getProductReviews","reviews","Range","createSliderWithTooltip","Slider","Home","match","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","error","productsCount","resPerPage","filteredProductsCount","params","useEffect","link","getProducts","count","marks","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","star","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","EMPTY_CART","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartItemHandler","removeItemFromCart","item","height","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","post","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","console","log","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","removeItem","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","orderDetails","shippingDetails","isPaid","Login","location","setEmail","password","setPassword","isAuthenticated","redirect","search","split","login","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","userData","encType","accept","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","Dashboard","totalAmount","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","numofItems","ProcessOrder","setStatus","orderId","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReview","setReviews","ProtectedRoute","isAdmin","Component","component","rest","props","reducer","combineReducers","isItemExist","find","i","filter","initialState","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.988e0fc3.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\n\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\n\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\n\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\n\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOGIN_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Register user\nexport const register = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST })\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update profile\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update password\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Forgot password\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Reset password\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all users\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('/api/v1/admin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.users\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user - ADMIN\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get user details - ADMIN\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete user - ADMIN\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { useState } from 'react'\n\nconst Search = ({ history }) => {\n\n    const [keyword, setKeyword] = useState('');\n\n    const searchHandler = (e) => {\n        e.preventDefault()\n\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n        <form onSubmit={searchHandler} >\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    id=\"search_field\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Product Name ...\"\n                    onChange={(e) => setKeyword(e.target.value)}\n                />\n                <div className=\"input-group-append\">\n                    <button id=\"search_btn\" className=\"btn\">\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Search\n","import React, { Fragment } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\n\nimport Search from './Search'\n\nimport '../../App.css'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/shopit_logo.png\" />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","import React, { Fragment } from 'react';\n\nconst Footer = () => {\n  return (\n    <Fragment>\n      <footer>\n        <div className=\"main-content\">\n          <div className=\"left box\">\n            <h2>About Us</h2>\n            <div className=\"content\">\n              <p>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                Perferendis, repellendus nostrum, asperiores earum assumenda\n                nobis recusandae deserunt delectus nihil, quo enim molestias\n                accusantium nam corrupti facere quasi minus illum? Laudantium!\n              </p>\n              <div className=\"social\">\n                <a href=\"#\">\n                  <span className=\"fab fa-facebook\"></span>\n                </a>\n                <a href=\"#\">\n                  <span className=\"fab fa-twitter\"></span>\n                </a>\n                <a href=\"#\">\n                  <span className=\"fab fa-linkedin\"></span>\n                </a>\n                <a href=\"#\">\n                  <span className=\"fab fa-youtube\"></span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"center box\">\n            <h2>Address</h2>\n            <div className=\"content\">\n              <div className=\"place\">\n                <div className=\"fas fa-map-market-alt\"></div>\n                <span className=\"text\">Nairobi,Kenya</span>\n              </div>\n              <div className=\"phone\">\n                <div className=\"fas fa-phone-alt\"></div>\n                <span className=\"text\">0725523820</span>\n              </div>\n              <div className=\"email\">\n                <div className=\"fas fa-envelope\"></div>\n                <span className=\"text\">douglasmogoba@gmail.com</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"right box\">\n            <h2>contact us</h2>\n            <div className=\"content\">\n              <form action=\"#\">\n                <div className=\"email\">\n                  <div className=\"text\">Email *</div>\n                  <input required type=\"email\" name=\"\" id=\"\" />\n                </div>\n                <div className=\"msg\">\n                  <div className=\"text\">Message *</div>\n                  <textarea required cols=\"30\" rows=\"2\"></textarea>\n                </div>\n                <button className=\"btn\">Send</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst MetaData = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{`${title} - ShopIT`}</title>\n        </Helmet>\n    )\n}\n\nexport default MetaData\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\"> </div>\n    )\n}\n\nexport default Loader\n","export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\n\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\n\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\n\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\n\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\n\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\n\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\n\nimport {\n  ALL_PRODUCTS_REQUEST,\n  ALL_PRODUCTS_SUCCESS,\n  ALL_PRODUCTS_FAIL,\n  ADMIN_PRODUCTS_REQUEST,\n  ADMIN_PRODUCTS_SUCCESS,\n  ADMIN_PRODUCTS_FAIL,\n  NEW_PRODUCT_REQUEST,\n  NEW_PRODUCT_SUCCESS,\n  NEW_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  NEW_REVIEW_REQUEST,\n  NEW_REVIEW_SUCCESS,\n  NEW_REVIEW_FAIL,\n  GET_REVIEWS_REQUEST,\n  GET_REVIEWS_SUCCESS,\n  GET_REVIEWS_FAIL,\n  DELETE_REVIEW_REQUEST,\n  DELETE_REVIEW_SUCCESS,\n  DELETE_REVIEW_FAIL,\n  CLEAR_ERRORS,\n} from '../constants/productConstants';\n\nexport const getProducts =\n  (keyword = '', currentPage = 1, price, category, rating = 0) =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: ALL_PRODUCTS_REQUEST });\n\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n      if (category) {\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\n      }\n\n      const { data } = await axios.get(link);\n\n      dispatch({\n        type: ALL_PRODUCTS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCTS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\nexport const newProduct = (productData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_PRODUCT_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/v1/admin/product/new`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/product/${id}`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const newReview = (reviewData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_REVIEW_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getAdminProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_PRODUCTS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/admin/products`);\n\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: GET_REVIEWS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\n\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_REVIEW_REQUEST });\n\n    const { data } = await axios.delete(\n      `/api/v1/reviews?id=${id}&productId=${productId}`\n    );\n\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    console.log(error.response);\n\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n};\n","import React, { Fragment, useState, useEffect } from 'react';\nimport Pagination from 'react-js-pagination';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport MetaData from './layout/MetaData';\nimport Product from './product/Product';\nimport Loader from './layout/Loader';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { getProducts } from '../actions/productActions';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nconst Home = ({ match }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [price, setPrice] = useState([1, 1000]);\n  const [category, setCategory] = useState('');\n  const [rating, setRating] = useState(0);\n\n  const categories = [\n    'Electronics',\n    'Cameras',\n    'Laptops',\n    'Accessories',\n    'Headphones',\n    'Food',\n    'Books',\n    'Clothes/Shoes',\n    'Beauty/Health',\n    'Sports',\n    'Outdoor',\n    'Home',\n  ];\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const {\n    loading,\n    products,\n    error,\n    productsCount,\n    resPerPage,\n    filteredProductsCount,\n  } = useSelector((state) => state.products);\n\n  const keyword = match.params.keyword;\n\n  useEffect(() => {\n    if (error) {\n      return alert.error(error);\n    }\n\n    dispatch(getProducts(keyword, currentPage, price, category, rating));\n  }, [dispatch, alert, error, keyword, currentPage, price, category, rating]);\n\n  function setCurrentPageNo(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  let count = productsCount;\n  if (keyword) {\n    count = filteredProductsCount;\n  }\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title={'Buy Best Products Online'} />\n\n          <h1 id=\"products_heading\">Jumia Products</h1>\n\n          <section id=\"products\" className=\"container mt-5\">\n            <div className=\"row\">\n              {keyword ? (\n                <Fragment>\n                  <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                    <div className=\"px-5\">\n                      <Range\n                        marks={{\n                          1: `$1`,\n                          1000: `$1000`,\n                        }}\n                        min={1}\n                        max={1000}\n                        defaultValue={[1, 1000]}\n                        tipFormatter={(value) => `$${value}`}\n                        tipProps={{\n                          placement: 'top',\n                          visible: true,\n                        }}\n                        value={price}\n                        onChange={(price) => setPrice(price)}\n                      />\n\n                      <hr className=\"my-5\" />\n\n                      <div className=\"mt-5\">\n                        <h4 className=\"mb-3\">Categories</h4>\n\n                        <ul className=\"pl-0\">\n                          {categories.map((category) => (\n                            <li\n                              style={{\n                                cursor: 'pointer',\n                                listStyleType: 'none',\n                              }}\n                              key={category}\n                              onClick={() => setCategory(category)}\n                            >\n                              {category}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n\n                      <hr className=\"my-3\" />\n\n                      <div className=\"mt-5\">\n                        <h4 className=\"mb-3\">Ratings</h4>\n\n                        <ul className=\"pl-0\">\n                          {[5, 4, 3, 2, 1].map((star) => (\n                            <li\n                              style={{\n                                cursor: 'pointer',\n                                listStyleType: 'none',\n                              }}\n                              key={star}\n                              onClick={() => setRating(star)}\n                            >\n                              <div className=\"rating-outer\">\n                                <div\n                                  className=\"rating-inner\"\n                                  style={{\n                                    width: `${star * 20}%`,\n                                  }}\n                                ></div>\n                              </div>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-6 col-md-9\">\n                    <div className=\"row\">\n                      {products.map((product) => (\n                        <Product key={product._id} product={product} col={4} />\n                      ))}\n                    </div>\n                  </div>\n                </Fragment>\n              ) : (\n                products.map((product) => (\n                  <Product key={product._id} product={product} col={3} />\n                ))\n              )}\n            </div>\n          </section>\n\n          {resPerPage <= count && (\n            <div className=\"d-flex justify-content-center mt-5\">\n              <Pagination\n                activePage={currentPage}\n                itemsCountPerPage={resPerPage}\n                totalItemsCount={productsCount}\n                onChange={setCurrentPageNo}\n                nextPageText={'Next'}\n                prevPageText={'Prev'}\n                firstPageText={'First'}\n                lastPageText={'Last'}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n              />\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react'\n\nconst ListReviews = ({ reviews }) => {\n    return (\n        <div class=\"reviews w-75\">\n            <h3>Other's Reviews:</h3>\n            <hr />\n            {reviews && reviews.map(review => (\n                <div key={review._id} class=\"review-card my-3\">\n                    <div class=\"rating-outer\">\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\n                    </div>\n                    <p class=\"review_user\">by {review.name}</p>\n                    <p class=\"review_comment\">{review.comment}</p>\n\n                    <hr />\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default ListReviews\n","export const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART';\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO';\nexport const EMPTY_CART = 'EMPTY_CART';\n","import axios from 'axios';\nimport {\n  ADD_TO_CART,\n  REMOVE_ITEM_CART,\n  SAVE_SHIPPING_INFO,\n  EMPTY_CART,\n} from '../constants/cartConstants';\n\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/v1/product/${id}`);\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      product: data.product._id,\n      name: data.product.name,\n      price: data.product.price,\n      image: data.product.images[0].url,\n      stock: data.product.stock,\n      quantity,\n    },\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_ITEM_CART,\n    payload: id,\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data,\n  });\n\n  localStorage.setItem('shippingInfo', JSON.stringify(data));\n};\n\nexport const emptyCart = () => async (dispatch) => {\n  dispatch({\n    type: EMPTY_CART,\n  });\n};\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport ListReviews from '../review/ListReviews';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getProductDetails,\n  newReview,\n  clearErrors,\n} from '../../actions/productActions';\nimport { addItemToCart } from '../../actions/cartActions';\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants';\n\nconst ProductDetails = ({ match }) => {\n  const [quantity, setQuantity] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { loading, error, product } = useSelector(\n    (state) => state.productDetails\n  );\n  const { user } = useSelector((state) => state.auth);\n  const { error: reviewError, success } = useSelector(\n    (state) => state.newReview\n  );\n\n  useEffect(() => {\n    dispatch(getProductDetails(match.params.id));\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (reviewError) {\n      alert.error(reviewError);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success('Reivew posted successfully');\n      dispatch({ type: NEW_REVIEW_RESET });\n    }\n  }, [dispatch, alert, error, reviewError, match.params.id, success]);\n\n  const addToCart = () => {\n    dispatch(addItemToCart(match.params.id, quantity));\n    alert.success('Item Added to Cart');\n  };\n\n  const increaseQty = () => {\n    const count = document.querySelector('.count');\n\n    if (count.valueAsNumber >= product.stock) return;\n\n    const qty = count.valueAsNumber + 1;\n    setQuantity(qty);\n  };\n\n  const decreaseQty = () => {\n    const count = document.querySelector('.count');\n\n    if (count.valueAsNumber <= 1) return;\n\n    const qty = count.valueAsNumber - 1;\n    setQuantity(qty);\n  };\n\n  function setUserRatings() {\n    const stars = document.querySelectorAll('.star');\n\n    stars.forEach((star, index) => {\n      star.starValue = index + 1;\n\n      ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n        star.addEventListener(e, showRatings);\n      });\n    });\n\n    function showRatings(e) {\n      stars.forEach((star, index) => {\n        if (e.type === 'click') {\n          if (index < this.starValue) {\n            star.classList.add('orange');\n\n            setRating(this.starValue);\n          } else {\n            star.classList.remove('orange');\n          }\n        }\n\n        if (e.type === 'mouseover') {\n          if (index < this.starValue) {\n            star.classList.add('yellow');\n          } else {\n            star.classList.remove('yellow');\n          }\n        }\n\n        if (e.type === 'mouseout') {\n          star.classList.remove('yellow');\n        }\n      });\n    }\n  }\n\n  const reviewHandler = () => {\n    const formData = new FormData();\n\n    formData.set('rating', rating);\n    formData.set('comment', comment);\n    formData.set('productId', match.params.id);\n\n    dispatch(newReview(formData));\n  };\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title={product.name} />\n          <div className='row d-flex justify-content-around'>\n            <div className='col-12 col-lg-5 img-fluid' id='product_image'>\n              <Carousel pause='hover'>\n                {product.images &&\n                  product.images.map((image) => (\n                    <Carousel.Item key={image.public_id}>\n                      <img\n                        className='d-block w-100'\n                        src={image.url}\n                        alt={product.title}\n                      />\n                    </Carousel.Item>\n                  ))}\n              </Carousel>\n            </div>\n\n            <div className='col-12 col-lg-5 mt-5'>\n              <h3>{product.name}</h3>\n              <p id='product_id'>Product # {product._id}</p>\n\n              <hr />\n\n              <div className='rating-outer'>\n                <div\n                  className='rating-inner'\n                  style={{ width: `${(product.ratings / 5) * 100}%` }}\n                ></div>\n              </div>\n              <span id='no_of_reviews'>({product.numOfReviews} Reviews)</span>\n\n              <hr />\n\n              <p id='product_price'>${product.price}</p>\n              <div className='stockCounter d-inline'>\n                <span className='btn btn-danger minus' onClick={decreaseQty}>\n                  -\n                </span>\n\n                <input\n                  type='number'\n                  className='form-control count d-inline'\n                  value={quantity}\n                  readOnly\n                />\n\n                <span className='btn btn-primary plus' onClick={increaseQty}>\n                  +\n                </span>\n              </div>\n              <button\n                type='button'\n                id='cart_btn'\n                className='btn btn-primary d-inline ml-4'\n                disabled={product.stock === 0}\n                onClick={addToCart}\n              >\n                Add to Cart\n              </button>\n\n              <hr />\n\n              <p>\n                Status:{' '}\n                <span\n                  id='stock_status'\n                  className={product.stock > 0 ? 'greenColor' : 'redColor'}\n                >\n                  {product.stock > 0 ? 'In Stock' : 'Out of Stock'}\n                </span>\n              </p>\n\n              <hr />\n\n              <p>\n                Quantity:{' '}\n                <span\n                  id='quantity_status'\n                  className={product.stock > 0 ? 'greenColor' : 'redColor'}\n                >\n                  {product.stock}\n                </span>\n              </p>\n\n              <hr />\n\n              <h4 className='mt-2'>Description:</h4>\n              <p>{product.description}</p>\n              <hr />\n              <p id='product_seller mb-3'>\n                Sold by: <strong>{product.seller}</strong>\n              </p>\n\n              {user ? (\n                <button\n                  id='review_btn'\n                  type='button'\n                  className='btn btn-primary mt-4'\n                  data-toggle='modal'\n                  data-target='#ratingModal'\n                  onClick={setUserRatings}\n                >\n                  Submit Your Review\n                </button>\n              ) : (\n                <div className='alert alert-danger mt-5' type='alert'>\n                  Login to post your review.\n                </div>\n              )}\n\n              <div className='row mt-2 mb-5'>\n                <div className='rating w-50'>\n                  <div\n                    className='modal fade'\n                    id='ratingModal'\n                    tabIndex='-1'\n                    role='dialog'\n                    aria-labelledby='ratingModalLabel'\n                    aria-hidden='true'\n                  >\n                    <div className='modal-dialog' role='document'>\n                      <div className='modal-content'>\n                        <div className='modal-header'>\n                          <h5 className='modal-title' id='ratingModalLabel'>\n                            Submit Review\n                          </h5>\n                          <button\n                            type='button'\n                            className='close'\n                            data-dismiss='modal'\n                            aria-label='Close'\n                          >\n                            <span aria-hidden='true'>&times;</span>\n                          </button>\n                        </div>\n                        <div className='modal-body'>\n                          <ul className='stars'>\n                            <li className='star'>\n                              <i className='fa fa-star'></i>\n                            </li>\n                            <li className='star'>\n                              <i className='fa fa-star'></i>\n                            </li>\n                            <li className='star'>\n                              <i className='fa fa-star'></i>\n                            </li>\n                            <li className='star'>\n                              <i className='fa fa-star'></i>\n                            </li>\n                            <li className='star'>\n                              <i className='fa fa-star'></i>\n                            </li>\n                          </ul>\n\n                          <textarea\n                            name='review'\n                            id='review'\n                            className='form-control mt-3'\n                            value={comment}\n                            onChange={(e) => setComment(e.target.value)}\n                          ></textarea>\n\n                          <button\n                            className='btn my-3 float-right review-btn px-4 text-white'\n                            onClick={reviewHandler}\n                            data-dismiss='modal'\n                            aria-label='Close'\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {product.reviews && product.reviews.length > 0 && (\n            <ListReviews reviews={product.reviews} />\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\n    return (\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\n\n            {shipping ? <Link to='shippping' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Shipping</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Shipping</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Confirm Order</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Confirm Order</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n            {payment ? <Link to='/payment' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Payment</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Payment</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n        </div>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { Fragment, useState } from 'react'\nimport { countries } from 'countries-list'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveShippingInfo } from '../../actions/cartActions'\n\nconst Shipping = ({ history }) => {\n\n    const countriesList = Object.values(countries)\n\n    const { shippingInfo } = useSelector(state => state.cart)\n\n    const [address, setAddress] = useState(shippingInfo.address)\n    const [city, setCity] = useState(shippingInfo.city)\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\n    const [country, setCountry] = useState(shippingInfo.country)\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\n        history.push('/confirm')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Shipping Info'} />\n\n            <CheckoutSteps shipping />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Shipping Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address_field\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address_field\"\n                                className=\"form-control\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city_field\">City</label>\n                            <input\n                                type=\"text\"\n                                id=\"city_field\"\n                                className=\"form-control\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone_field\">Phone No</label>\n                            <input\n                                type=\"phone\"\n                                id=\"phone_field\"\n                                className=\"form-control\"\n                                value={phoneNo}\n                                onChange={(e) => setPhoneNo(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\n                            <input\n                                type=\"number\"\n                                id=\"postal_code_field\"\n                                className=\"form-control\"\n                                value={postalCode}\n                                onChange={(e) => setPostalCode(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"country_field\">Country</label>\n                            <select\n                                id=\"country_field\"\n                                className=\"form-control\"\n                                value={country}\n                                onChange={(e) => setCountry(e.target.value)}\n                                required\n                            >\n\n                                {countriesList.map(country => (\n                                    <option key={country.name} value={country.name}>\n                                        {country.name}\n                                    </option>\n                                ))}\n\n                            </select>\n                        </div>\n\n                        <button\n                            id=\"shipping_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            CONTINUE\n                            </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Shipping\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useSelector } from 'react-redux'\n\nconst ConfirmOrder = ({ history }) => {\n\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\n    const { user } = useSelector(state => state.auth)\n\n    // Calculate Order Prices\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\n\n    const processToPayment = () => {\n        const data = {\n            itemsPrice: itemsPrice.toFixed(2),\n            shippingPrice,\n            taxPrice,\n            totalPrice\n        }\n\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\n        history.push('/payment')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Confirm Order'} />\n\n            <CheckoutSteps shipping confirmOrder />\n\n            <div className=\"row d-flex justify-content-between\">\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n\n                    <h4 className=\"mb-3\">Shipping Info</h4>\n                    <p><b>Name:</b> {user && user.name}</p>\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\n\n                    <hr />\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n                    {cartItems.map(item => (\n                        <Fragment>\n                            <hr />\n                            <div className=\"cart-item my-1\" key={item.product}>\n                                <div className=\"row\">\n                                    <div className=\"col-4 col-lg-2\">\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\n                                    </div>\n\n                                    <div className=\"col-5 col-lg-6\">\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </div>\n\n\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <hr />\n                        </Fragment>\n                    ))}\n\n\n\n                </div>\n\n                <div className=\"col-12 col-lg-3 my-4\">\n                    <div id=\"order_summary\">\n                        <h4>Order Summary</h4>\n                        <hr />\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\n\n                        <hr />\n\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\n\n                        <hr />\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\n                    </div>\n                </div>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ConfirmOrder\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\n\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\n\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\n\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET'\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET'\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\n\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n\n        dispatch({ type: CREATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/order/new', order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get curretly logged in user orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MY_ORDERS_REQUEST });\n\n        const { data } = await axios.get('/api/v1/orders/me')\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get order details\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ORDER_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/order/${id}`)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data.order\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all orders - ADMIN\nexport const allOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_ORDERS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/admin/orders`)\n\n        dispatch({\n            type: ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// update order\nexport const updateOrder = (id, orderData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete order\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_ORDER_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\n\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment, useEffect } from 'react';\n\nimport MetaData from '../layout/MetaData';\nimport CheckoutSteps from './CheckoutSteps';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrder, clearErrors } from '../../actions/orderActions';\nimport { emptyCart } from '../../actions/cartActions';\n\nimport {\n  useStripe,\n  useElements,\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n} from '@stripe/react-stripe-js';\n\nimport axios from 'axios';\n\nconst options = {\n  style: {\n    base: {\n      fontSize: '16px',\n    },\n    invalid: {\n      color: '#9e2146',\n    },\n  },\n};\n\nconst Payment = ({ history }) => {\n  const alert = useAlert();\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.auth);\n  const { cartItems, shippingInfo } = useSelector((state) => state.cart);\n  const { error } = useSelector((state) => state.newOrder);\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const order = {\n    orderItems: cartItems,\n    shippingInfo,\n  };\n\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n  if (orderInfo) {\n    order.itemsPrice = orderInfo.itemsPrice;\n    order.shippingPrice = orderInfo.shippingPrice;\n    order.taxPrice = orderInfo.taxPrice;\n    order.totalPrice = orderInfo.totalPrice;\n  }\n\n  const paymentData = {\n    amount: Math.round(orderInfo.totalPrice * 100),\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    document.querySelector('#pay_btn').disabled = true;\n\n    let res;\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      res = await axios.post('/api/v1/payment/process', paymentData, config);\n\n      const clientSecret = res.data.client_secret;\n\n      console.log(clientSecret);\n\n      if (!stripe || !elements) {\n        return;\n      }\n\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardNumberElement),\n          billing_details: {\n            name: user.name,\n            email: user.email,\n          },\n        },\n      });\n\n      if (result.error) {\n        alert.error(result.error.message);\n        document.querySelector('#pay_btn').disabled = false;\n      } else {\n        // The payment is processed or not\n        if (result.paymentIntent.status === 'succeeded') {\n          order.paymentInfo = {\n            id: result.paymentIntent.id,\n            status: result.paymentIntent.status,\n          };\n\n          dispatch(createOrder(order));\n          dispatch(emptyCart());\n          localStorage.removeItem('cartItems');\n\n          history.push('/success');\n        } else {\n          alert.error('There is some issue while payment processing');\n        }\n      }\n    } catch (error) {\n      document.querySelector('#pay_btn').disabled = false;\n      alert.error(error.response.data.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Payment'} />\n\n      <CheckoutSteps shipping confirmOrder payment />\n\n      <div className='row wrapper'>\n        <div className='col-10 col-lg-5'>\n          <form className='shadow-lg' onSubmit={submitHandler}>\n            <h1 className='mb-4'>Card Info</h1>\n            <div className='form-group'>\n              <label htmlFor='card_num_field'>Card Number</label>\n              <CardNumberElement\n                type='text'\n                id='card_num_field'\n                className='form-control'\n                options={options}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='card_exp_field'>Card Expiry</label>\n              <CardExpiryElement\n                type='text'\n                id='card_exp_field'\n                className='form-control'\n                options={options}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='card_cvc_field'>Card CVC</label>\n              <CardCvcElement\n                type='text'\n                id='card_cvc_field'\n                className='form-control'\n                options={options}\n              />\n            </div>\n\n            <button id='pay_btn' type='submit' className='btn btn-block py-3'>\n              Pay {` - ${orderInfo && orderInfo.totalPrice}`}\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport MetaData from '../layout/MetaData'\n\nconst OrderSuccess = () => {\n    return (\n        <Fragment>\n\n            <MetaData title={'Order Success'} />\n\n            <div className=\"row justify-content-center\">\n                <div className=\"col-6 mt-5 text-center\">\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\n\n                    <h2>Your Order has been placed successfully.</h2>\n\n                    <Link to=\"/orders/me\">Go to Orders</Link>\n                </div>\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrderSuccess\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { myOrders, clearErrors } from '../../actions/orderActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'My Orders'} />\n\n            <h1 className=\"my-5\">My Orders</h1>\n\n            {loading ? <Loader /> : (\n                <MDBDataTable\n                    data={setOrders()}\n                    className=\"px-3\"\n                    bordered\n                    striped\n                    hover\n                />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ListOrders\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\n\nconst OrderDetails = ({ match }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n\n    useEffect(() => {\n        dispatch(getOrderDetails(match.params.id));\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error, match.params.id])\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n    return (\n        <Fragment>\n            <MetaData title={'Order Details'} />\n\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\n\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\n\n                            <h4 className=\"mb-4\">Shipping Info</h4>\n                            <p><b>Name:</b> {user && user.name}</p>\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                            <p><b>Amount:</b> ${totalPrice}</p>\n\n                            <hr />\n\n                            <h4 className=\"my-4\">Payment</h4>\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n\n                            <h4 className=\"my-4\">Order Status:</h4>\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n                            <h4 className=\"my-4\">Order Items:</h4>\n\n                            <hr />\n                            <div className=\"cart-item my-1\">\n                                {orderItems && orderItems.map(item => (\n                                    <div key={item.product} className=\"row my-5\">\n                                        <div className=\"col-4 col-lg-2\">\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                        </div>\n\n                                        <div className=\"col-5 col-lg-5\">\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                        </div>\n\n\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                            <p>${item.price}</p>\n                                        </div>\n\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                            <p>{item.quantity} Piece(s)</p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <hr />\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default OrderDetails\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, clearErrors } from '../../actions/userActions'\n\nconst Register = ({ history }) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n    })\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData))\n    }\n\n    const onChange = e => {\n        if (e.target.name === 'avatar') {\n\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n        } else {\n            setUser({ ...user, [e.target.name]: e.target.value })\n        }\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Register User'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"iamges/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Register\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nconst Profile = () => {\n\n    const { user, loading } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Your Profile'} />\n\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                            <figure className='avatar avatar-profile'>\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\n                            </figure>\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Edit Profile\n                            </Link>\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Full Name</h4>\n                            <p>{user.name}</p>\n\n                            <h4>Email Address</h4>\n                            <p>{user.email}</p>\n\n                            <h4>Joined On</h4>\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\n\n                            {user.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\n                                    My Orders\n                                </Link>\n                            )}\n\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                                Change Password\n                            </Link>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","import React, { Fragment, useState, useEffect } from 'react';\n\nimport MetaData from '../layout/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateProfile,\n  loadUser,\n  clearErrors,\n} from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\n\nconst UpdateProfile = ({ history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.auth);\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      dispatch(loadUser());\n\n      history.push('/me');\n\n      dispatch({\n        type: UPDATE_PROFILE_RESET,\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('avatar', avatar);\n\n    dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  return (\n    <Fragment>\n      <MetaData title={'Update Profile'} />\n\n      <div className='row wrapper'>\n        <div className='col-10 col-lg-5'>\n          <form\n            className='shadow-lg'\n            onSubmit={submitHandler}\n            encType='multipart/form-data'\n          >\n            <h1 className='mt-2 mb-5'>Update Profile</h1>\n\n            <div className='form-group'>\n              <label htmlFor='email_field'>Name</label>\n              <input\n                type='name'\n                id='name_field'\n                className='form-control'\n                name='name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='email_field'>Email</label>\n              <input\n                type='email'\n                id='email_field'\n                className='form-control'\n                name='email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='avatar_upload'>Avatar</label>\n              <div className='d-flex align-items-center'>\n                <div>\n                  <figure className='avatar mr-3 item-rtl'>\n                    <img\n                      src={avatarPreview}\n                      className='rounded-circle'\n                      alt='Avatar Preview'\n                    />\n                  </figure>\n                </div>\n                <div className='custom-file'>\n                  <input\n                    type='file'\n                    name='avatar'\n                    className='custom-file-input'\n                    id='customFile'\n                    accept='image/*'\n                    onChange={onChange}\n                  />\n                  <label className='custom-file-label' htmlFor='customFile'>\n                    Choose Avatar\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <button\n              type='submit'\n              className='btn update-btn btn-block mt-4 mb-3'\n              disabled={loading ? true : false}\n            >\n              Update\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateProfile;\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label for=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e) => setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label for=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (message) {\n            alert.success(message)\n        }\n\n    }, [dispatch, alert, error, message])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false} >\n                            Send Email\n                    </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetPassword, clearErrors } from '../../actions/userActions'\n\nconst NewPassword = ({ history, match }) => {\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated successfully')\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData))\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'New Password Reset'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"new_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\">\n                            Set Password\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Sidebar = () => {\n    return (\n        <div className=\"sidebar-wrapper\">\n            <nav id=\"sidebar\">\n                <ul className=\"list-unstyled components\">\n                    <li>\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\n                    </li>\n\n                    <li>\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\n                            className=\"fa fa-product-hunt\"></i> Products</a>\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\n                            <li>\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\n                            </li>\n\n                            <li>\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\n                            </li>\n                        </ul>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\n                    </li>\n\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getAdminProducts } from '../../actions/productActions'\nimport { allOrders } from '../../actions/orderActions'\nimport { allUsers } from '../../actions/userActions'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n\n    const { products } = useSelector(state => state.products)\n    const { users } = useSelector(state => state.allUsers)\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\n\n    let outOfStock = 0;\n    products.forEach(product => {\n        if (product.stock === 0) {\n            outOfStock += 1;\n        }\n    })\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(allOrders())\n        dispatch(allUsers())\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <h1 className=\"my-4\">Dashboard</h1>\n\n                    {loading ? <Loader /> : (\n                        <Fragment>\n                            <MetaData title={'Admin Dashboard'} />\n\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Fragment>\n                    )}\n\n                </div>\n            </div>\n\n        </Fragment >\n    )\n}\n\nexport default Dashboard\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst ProductsList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state.products);\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Product deleted successfully');\n            history.push('/admin/products');\n            dispatch({ type: DELETE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\n\n    const setProducts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Price',\n                    field: 'price',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Stock',\n                    field: 'stock',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        products.forEach(product => {\n            data.rows.push({\n                id: product._id,\n                name: product.name,\n                price: `$${product.price}`,\n                stock: product.stock,\n                actions: <Fragment>\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All Products'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Products</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setProducts()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst NewProduct = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully');\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">New Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                     </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst UpdateProduct = ({ match, history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n\n    const productId = match.params.id;\n\n    useEffect(() => {\n\n        if (product && product._id !== productId) {\n            dispatch(getProductDetails(productId));\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setDescription(product.description);\n            setCategory(product.category);\n            setSeller(product.seller);\n            setStock(product.stock)\n            setOldImages(product.images)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully');\n            dispatch({ type: UPDATE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(updateProduct(product._id, formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">Update Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                 </label>\n                                    </div>\n\n                                    {oldImages && oldImages.map(img => (\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    UPDATE\n                            </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst OrdersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.allOrders);\n    const { isDeleted } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(allOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Order deleted successfully');\n            history.push('/admin/orders');\n            dispatch({ type: DELETE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id))\n    }\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'No of Items',\n                    field: 'numofItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numofItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions: <Fragment>\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Orders'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Orders</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setOrders()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrdersList\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst ProcessOrder = ({ match }) => {\n\n    const [status, setStatus] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n    const { error, isUpdated } = useSelector(state => state.order)\n\n    const orderId = match.params.id;\n\n    useEffect(() => {\n\n        dispatch(getOrderDetails(orderId))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, orderId])\n\n\n    const updateOrderHandler = (id) => {\n\n        const formData = new FormData();\n        formData.set('status', status);\n\n        dispatch(updateOrder(id, formData))\n    }\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n    return (\n        <Fragment>\n            <MetaData title={`Process Order # ${order && order._id}`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        {loading ? <Loader /> : (\n                            <div className=\"row d-flex justify-content-around\">\n                                <div className=\"col-12 col-lg-7 order-details\">\n\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\n\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\n                                    <p><b>Name:</b> {user && user.name}</p>\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                                    <p><b>Amount:</b> ${totalPrice}</p>\n\n                                    <hr />\n\n                                    <h4 className=\"my-4\">Payment</h4>\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n                                    <h4 className=\"my-4\">Stripe ID</h4>\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\n\n                                    <h4 className=\"my-4\">Order Status:</h4>\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n\n                                    <h4 className=\"my-4\">Order Items:</h4>\n\n                                    <hr />\n                                    <div className=\"cart-item my-1\">\n                                        {orderItems && orderItems.map(item => (\n                                            <div key={item.product} className=\"row my-5\">\n                                                <div className=\"col-4 col-lg-2\">\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                                </div>\n\n                                                <div className=\"col-5 col-lg-5\">\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                </div>\n\n\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                    <p>${item.price}</p>\n                                                </div>\n\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                    <p>{item.quantity} Piece(s)</p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <hr />\n                                </div>\n\n                                <div className=\"col-12 col-lg-3 mt-5\">\n                                    <h4 className=\"my-4\">Status</h4>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"form-control\"\n                                            name='status'\n                                            value={status}\n                                            onChange={(e) => setStatus(e.target.value)}\n                                        >\n                                            <option value=\"Processing\">Processing</option>\n                                            <option value=\"Shipped\">Shipped</option>\n                                            <option value=\"Delivered\">Delivered</option>\n                                        </select>\n                                    </div>\n\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\n                                        Update Status\n                                    </button>\n                                </div>\n\n                            </div>\n                        )}\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProcessOrder\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { isDeleted } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('User deleted successfully');\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'User ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users.forEach(user => {\n            data.rows.push({\n                id: user._id,\n                name: user.name,\n                email: user.email,\n                role: user.role,\n\n                actions: <Fragment>\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Users</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setUsers()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\n\nconst UpdateUser = ({ history, match }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [role, setRole] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated } = useSelector(state => state.user);\n    const { user } = useSelector(state => state.userDetails)\n\n    const userId = match.params.id;\n\n    useEffect(() => {\n\n        console.log(user && user._id !== userId);\n        if (user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setRole(user.role)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n\n            history.push('/admin/users')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData))\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={`Update User`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"name\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        name='name'\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        name='email'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"role_field\">Role</label>\n\n                                    <select\n                                        id=\"role_field\"\n                                        className=\"form-control\"\n                                        name='role'\n                                        value={role}\n                                        onChange={(e) => setRole(e.target.value)}\n                                    >\n                                        <option value=\"user\">user</option>\n                                        <option value=\"admin\">admin</option>\n                                    </select>\n                                </div>\n\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\n\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\nimport Sidebar from './Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getProductReviews,\n  deleteReview,\n  clearErrors,\n} from '../../actions/productActions';\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\n\nconst ProductReviews = () => {\n  const [productId, setProductId] = useState('');\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, reviews } = useSelector((state) => state.productReviews);\n  const { isDeleted, error: deleteError } = useSelector(\n    (state) => state.review\n  );\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (productId !== '') {\n      dispatch(getProductReviews(productId));\n    }\n\n    if (isDeleted) {\n      alert.success('Review deleted successfully');\n      dispatch({ type: DELETE_REVIEW_RESET });\n    }\n  }, [dispatch, alert, error, productId, isDeleted, deleteError]);\n\n  const deleteReviewHandler = (id) => {\n    dispatch(deleteReview(id, productId));\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(getProductReviews(productId));\n  };\n\n  const setReviews = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Review ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Rating',\n          field: 'rating',\n          sort: 'asc',\n        },\n        {\n          label: 'Comment',\n          field: 'comment',\n          sort: 'asc',\n        },\n        {\n          label: 'User',\n          field: 'user',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    reviews.forEach((review) => {\n      data.rows.push({\n        id: review._id,\n        rating: review.rating,\n        comment: review.comment,\n        user: review.name,\n\n        actions: (\n          <button\n            className='btn btn-danger py-1 px-2 ml-2'\n            onClick={() => deleteReviewHandler(review._id)}\n          >\n            <i className='fa fa-trash'></i>\n          </button>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Product Reviews'} />\n      <div className='row'>\n        <div className='col-12 col-md-2'>\n          <Sidebar />\n        </div>\n\n        <div className='col-12 col-md-10'>\n          <Fragment>\n            <div className='row justify-content-center mt-5'>\n              <div className='col-5'>\n                <form onSubmit={submitHandler}>\n                  <div className='form-group'>\n                    <label htmlFor='productId_field'>Enter Product ID</label>\n                    <input\n                      type='text'\n                      id='productId_field'\n                      className='form-control'\n                      value={productId}\n                      onChange={(e) => setProductId(e.target.value)}\n                    />\n                  </div>\n\n                  <button\n                    id='search_button'\n                    type='submit'\n                    className='btn btn-primary btn-block py-2'\n                  >\n                    SEARCH\n                  </button>\n                </form>\n              </div>\n            </div>\n\n            {reviews && reviews.length > 0 ? (\n              <MDBDataTable\n                data={setReviews()}\n                className='px-3'\n                bordered\n                striped\n                hover\n              />\n            ) : (\n              <p className='mt-5 text-center'>No Reviews.</p>\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProductReviews;\n","import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if (isAuthenticated === false) {\n                            return <Redirect to='/login' />\n                        }\n\n                        if (isAdmin === true && user.role !== 'admin') {\n                            return <Redirect to=\"/\" />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRoute\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    products: productsReducer,\n    productDetails: productDetailsReducer,\n    newProduct: newProductReducer,\n    product: productReducer,\n    productReviews: productReviewsReducer,\n    review: reviewReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    allOrders: allOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    order: orderReducer,\n    newReview: newReviewReducer\n})\n\n\nlet initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n            ? JSON.parse(localStorage.getItem('cartItems'))\n            : [],\n        shippingInfo: localStorage.getItem('shippingInfo')\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\n            : {}\n    }\n}\n\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\n\nexport default store;","import {\n  ALL_PRODUCTS_REQUEST,\n  ALL_PRODUCTS_SUCCESS,\n  ALL_PRODUCTS_FAIL,\n  ADMIN_PRODUCTS_REQUEST,\n  ADMIN_PRODUCTS_SUCCESS,\n  ADMIN_PRODUCTS_FAIL,\n  NEW_PRODUCT_REQUEST,\n  NEW_PRODUCT_SUCCESS,\n  NEW_PRODUCT_RESET,\n  NEW_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_RESET,\n  DELETE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_RESET,\n  UPDATE_PRODUCT_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  NEW_REVIEW_REQUEST,\n  NEW_REVIEW_SUCCESS,\n  NEW_REVIEW_RESET,\n  NEW_REVIEW_FAIL,\n  GET_REVIEWS_REQUEST,\n  GET_REVIEWS_SUCCESS,\n  GET_REVIEWS_FAIL,\n  DELETE_REVIEW_REQUEST,\n  DELETE_REVIEW_SUCCESS,\n  DELETE_REVIEW_RESET,\n  DELETE_REVIEW_FAIL,\n  CLEAR_ERRORS,\n} from '../constants/productConstants';\n\nexport const productsReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case ALL_PRODUCTS_REQUEST:\n    case ADMIN_PRODUCTS_REQUEST:\n      return {\n        loading: true,\n        products: [],\n      };\n\n    case ALL_PRODUCTS_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        productsCount: action.payload.productsCount,\n        resPerPage: action.payload.resPerPage,\n        filteredProductsCount: action.payload.filteredProductsCount,\n      };\n\n    case ADMIN_PRODUCTS_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload,\n      };\n\n    case ALL_PRODUCTS_FAIL:\n    case ADMIN_PRODUCTS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const newProductReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case NEW_PRODUCT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case NEW_PRODUCT_SUCCESS:\n      return {\n        loading: false,\n        success: action.payload.success,\n        product: action.payload.product,\n      };\n\n    case NEW_PRODUCT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case NEW_PRODUCT_RESET:\n      return {\n        ...state,\n        success: false,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const productReducer = (state = {}, action) => {\n  switch (action.type) {\n    case DELETE_PRODUCT_REQUEST:\n    case UPDATE_PRODUCT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case DELETE_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isDeleted: action.payload,\n      };\n\n    case UPDATE_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isUpdated: action.payload,\n      };\n\n    case DELETE_PRODUCT_FAIL:\n    case UPDATE_PRODUCT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case DELETE_PRODUCT_RESET:\n      return {\n        ...state,\n        isDeleted: false,\n      };\n\n    case UPDATE_PRODUCT_RESET:\n      return {\n        ...state,\n        isUpdated: false,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload,\n      };\n\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const newReviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NEW_REVIEW_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case NEW_REVIEW_SUCCESS:\n      return {\n        loading: false,\n        success: action.payload,\n      };\n\n    case NEW_REVIEW_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case NEW_REVIEW_RESET:\n      return {\n        ...state,\n        success: false,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const productReviewsReducer = (state = { review: [] }, action) => {\n  switch (action.type) {\n    case GET_REVIEWS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case GET_REVIEWS_SUCCESS:\n      return {\n        loading: false,\n        reviews: action.payload,\n      };\n\n    case GET_REVIEWS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const reviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case DELETE_REVIEW_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case DELETE_REVIEW_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isDeleted: action.payload,\n      };\n\n    case DELETE_REVIEW_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case DELETE_REVIEW_RESET:\n      return {\n        ...state,\n        isDeleted: false,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false,\n            }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case DELETE_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_USER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const forgotPasswordReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n\n        case FORGOT_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                message: action.payload\n            }\n\n        case NEW_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                success: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_USERS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case ALL_USERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n\n        case ALL_USERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","import {\n  ADD_TO_CART,\n  REMOVE_ITEM_CART,\n  SAVE_SHIPPING_INFO,\n  EMPTY_CART,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingInfo: {} },\n  action\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const item = action.payload;\n\n      const isItemExist = state.cartItems.find(\n        (i) => i.product === item.product\n      );\n\n      if (isItemExist) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((i) =>\n            i.product === isItemExist.product ? item : i\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case REMOVE_ITEM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((i) => i.product !== action.payload),\n      };\n\n    case SAVE_SHIPPING_INFO:\n      return {\n        ...state,\n        shippingInfo: action.payload,\n      };\n\n    case EMPTY_CART:\n      return {\n        ...state,\n        cartItems: [],\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_RESET,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const newOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case CREATE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CREATE_ORDER_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CREATE_ORDER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case MY_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case MY_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case MY_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n\n        case ORDER_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount\n            }\n\n        case ALL_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_ORDER_REQUEST:\n        case DELETE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_ORDER_FAIL:\n        case DELETE_ORDER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case UPDATE_ORDER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_ORDER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\n\nimport Home from './components/Home';\nimport ProductDetails from './components/product/ProductDetails';\n\n// Cart Imports\nimport Cart from './components/cart/Cart';\nimport Shipping from './components/cart/Shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment';\nimport OrderSuccess from './components/cart/OrderSuccess';\n\n// Order Imports\nimport ListOrders from './components/order/ListOrders';\nimport OrderDetails from './components/order/OrderDetails';\n\n// Auth or User imports\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\nimport Profile from './components/user/Profile';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\n\n// Admin Imports\nimport Dashboard from './components/admin/Dashboard';\nimport ProductsList from './components/admin/ProductsList';\nimport NewProduct from './components/admin/NewProduct';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrdersList from './components/admin/OrdersList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport UsersList from './components/admin/UsersList';\nimport UpdateUser from './components/admin/UpdateUser';\nimport ProductReviews from './components/admin/ProductReviews';\n\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport { loadUser } from './actions/userActions';\nimport { useSelector } from 'react-redux';\nimport store from './store';\nimport axios from 'axios';\n\n// Payment\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nfunction App() {\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey);\n    }\n\n    getStripApiKey();\n  }, []);\n\n  const { user, isAuthenticated, loading } = useSelector((state) => state.auth);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container container-fluid\">\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/search/:keyword\" component={Home} />\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n          <Route path=\"/cart\" component={Cart} exact />\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          {stripeApiKey && (\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          )}\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n          <ProtectedRoute\n            path=\"/password/update\"\n            component={UpdatePassword}\n            exact\n          />\n\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n        </div>\n\n        <ProtectedRoute\n          path=\"/dashboard\"\n          isAdmin={true}\n          component={Dashboard}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/products\"\n          isAdmin={true}\n          component={ProductsList}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/product\"\n          isAdmin={true}\n          component={NewProduct}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/product/:id\"\n          isAdmin={true}\n          component={UpdateProduct}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/orders\"\n          isAdmin={true}\n          component={OrdersList}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/order/:id\"\n          isAdmin={true}\n          component={ProcessOrder}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/users\"\n          isAdmin={true}\n          component={UsersList}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/user/:id\"\n          isAdmin={true}\n          component={UpdateUser}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/reviews\"\n          isAdmin={true}\n          component={ProductReviews}\n          exact\n        />\n\n        {!loading && (!isAuthenticated || user.role !== 'admin') && <Footer />}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <Provider store={store} >\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}